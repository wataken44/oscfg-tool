[DEFAULT]

auth_strategy = keystone
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication strategy used by ironic-api. "noauth" should not be used in a production environment because all authentication will be disabled.

bindir = $pybasedir/bin
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Directory where ironic binaries are installed.

config_source = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Lists configuration groups that provide more details for accessing configuration settings from locations other than local files.

debug_tracebacks_in_api = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Return server tracebacks in the API response for any error responses. WARNING: this is insecure and should not be used in a production environment.

default_bios_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default bios interface to be used for nodes that do not have bios_interface field set. A complete list of bios interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.bios" entrypoint.

default_boot_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default boot interface to be used for nodes that do not have boot_interface field set. A complete list of boot interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.boot" entrypoint.

default_console_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default console interface to be used for nodes that do not have console_interface field set. A complete list of console interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.console" entrypoint.

default_deploy_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default deploy interface to be used for nodes that do not have deploy_interface field set. A complete list of deploy interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.deploy" entrypoint.

default_firmware_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default firmware interface to be used for nodes that do not have firmware_interface field set. A complete list of firmware interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.firmware" entrypoint.

default_inspect_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default inspect interface to be used for nodes that do not have inspect_interface field set. A complete list of inspect interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.inspect" entrypoint.

default_management_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default management interface to be used for nodes that do not have management_interface field set. A complete list of management interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.management" entrypoint.

default_network_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default network interface to be used for nodes that do not have network_interface field set. A complete list of network interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.network" entrypoint.

default_portgroup_mode = active-backup
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default mode for portgroups. Allowed values can be found in the linux kernel documentation on bonding: https://www.kernel.org/doc/Documentation/networking/bonding.txt.

default_power_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default power interface to be used for nodes that do not have power_interface field set. A complete list of power interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.power" entrypoint.

default_raid_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default raid interface to be used for nodes that do not have raid_interface field set. A complete list of raid interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.raid" entrypoint.

default_rescue_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default rescue interface to be used for nodes that do not have rescue_interface field set. A complete list of rescue interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.rescue" entrypoint.

default_resource_class = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Resource class to use for new nodes when no resource class is provided in the creation request.

default_storage_interface = noop
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default storage interface to be used for nodes that do not have storage_interface field set. A complete list of storage interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.storage" entrypoint.

default_vendor_interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default vendor interface to be used for nodes that do not have vendor_interface field set. A complete list of vendor interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.vendor" entrypoint.

enabled_bios_interfaces = ['no-bios', 'redfish']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of bios interfaces to load during service initialization. Missing bios interfaces, or bios interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one bios interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented bios interfaces. A complete list of bios interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.bios" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled bios interfaces on every ironic-conductor service.

enabled_boot_interfaces = ['ipxe', 'pxe', 'redfish-virtual-media']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of boot interfaces to load during service initialization. Missing boot interfaces, or boot interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one boot interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented boot interfaces. A complete list of boot interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.boot" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled boot interfaces on every ironic-conductor service.

enabled_console_interfaces = ['no-console']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of console interfaces to load during service initialization. Missing console interfaces, or console interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one console interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented console interfaces. A complete list of console interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.console" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled console interfaces on every ironic-conductor service.

enabled_deploy_interfaces = ['direct', 'ramdisk']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of deploy interfaces to load during service initialization. Missing deploy interfaces, or deploy interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one deploy interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented deploy interfaces. A complete list of deploy interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.deploy" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled deploy interfaces on every ironic-conductor service.

enabled_firmware_interfaces = ['no-firmware']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of firmware interfaces to load during service initialization. Missing firmware interfaces, or firmware interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one firmware interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented firmware interfaces. A complete list of firmware interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.firmware" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled firmware interfaces on every ironic-conductor service.

enabled_hardware_types = ['ipmi', 'redfish']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of hardware types to load during service initialization. Missing hardware types, or hardware types which fail to initialize, will prevent the conductor service from starting. This option defaults to a recommended set of production-oriented hardware types. A complete list of hardware types present on your system may be found by enumerating the "ironic.hardware.types" entrypoint.

enabled_inspect_interfaces = ['no-inspect', 'redfish']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of inspect interfaces to load during service initialization. Missing inspect interfaces, or inspect interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one inspect interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented inspect interfaces. A complete list of inspect interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.inspect" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled inspect interfaces on every ironic-conductor service.

enabled_management_interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of management interfaces to load during service initialization. Missing management interfaces, or management interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one management interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented management interfaces. A complete list of management interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.management" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled management interfaces on every ironic-conductor service.

enabled_network_interfaces = ['flat', 'noop']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of network interfaces to load during service initialization. Missing network interfaces, or network interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one network interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented network interfaces. A complete list of network interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.network" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled network interfaces on every ironic-conductor service.

enabled_power_interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of power interfaces to load during service initialization. Missing power interfaces, or power interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one power interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented power interfaces. A complete list of power interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.power" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled power interfaces on every ironic-conductor service.

enabled_raid_interfaces = ['agent', 'no-raid', 'redfish']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of raid interfaces to load during service initialization. Missing raid interfaces, or raid interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one raid interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented raid interfaces. A complete list of raid interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.raid" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled raid interfaces on every ironic-conductor service.

enabled_rescue_interfaces = ['no-rescue']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of rescue interfaces to load during service initialization. Missing rescue interfaces, or rescue interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one rescue interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented rescue interfaces. A complete list of rescue interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.rescue" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled rescue interfaces on every ironic-conductor service.

enabled_storage_interfaces = ['cinder', 'noop']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of storage interfaces to load during service initialization. Missing storage interfaces, or storage interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one storage interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented storage interfaces. A complete list of storage interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.storage" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled storage interfaces on every ironic-conductor service.

enabled_vendor_interfaces = ['ipmitool', 'redfish', 'no-vendor']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specify the list of vendor interfaces to load during service initialization. Missing vendor interfaces, or vendor interfaces which fail to initialize, will prevent the ironic-conductor service from starting. At least one vendor interface that is supported by each enabled hardware type must be enabled here, or the ironic-conductor service will not start. Must not be an empty list. The default value is a recommended set of production-oriented vendor interfaces. A complete list of vendor interfaces present on your system may be found by enumerating the "ironic.hardware.interfaces.vendor" entrypoint. When setting this value, please make sure that every enabled hardware type will have the same set of enabled vendor interfaces on every ironic-conductor service.

esp_image = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to EFI System Partition image file. This file is recommended for creating UEFI bootable ISO images efficiently. ESP image should contain a FAT12/16/32-formatted file system holding EFI boot loaders (e.g. GRUB2) for each hardware architecture ironic needs to boot. This option is only used when neither ESP nor ISO deploy image is configured to the node being deployed in which case ironic will attempt to fetch ESP image from the configured location or extract ESP image from UEFI-bootable deploy ISO image.

force_raw_images = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If True, convert backing images to "raw" disk image format.

grub_config_path = EFI/BOOT/grub.cfg
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# GRUB2 configuration file location on the UEFI ISO images produced by ironic. The default value is usually incorrect and should not be relied on. If you use a GRUB2 image from a certain distribution, use a distribution-specific path here, e.g. EFI/ubuntu/grub.cfg

grub_config_template = $pybasedir/common/grub_conf.template
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Template file for grub configuration file.

hash_partition_exponent = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Exponent to determine number of hash partitions to use when distributing load across conductors. Larger values will result in more even distribution of load and less load when rebalancing the ring, but more memory usage. Number of partitions per conductor is (2^hash_partition_exponent). This determines the granularity of rebalancing: given 10 hosts, and an exponent of the 2, there are 40 partitions in the ring.A few thousand partitions should make rebalancing smooth in most cases. The default is suitable for up to a few hundred conductors. Configuring for too many partitions has a negative impact on CPU usage.

hash_ring_algorithm = md5
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Hash function to use when building the hash ring. If running on a FIPS system, do not use md5. WARNING: all ironic services in a cluster MUST use the same algorithm at all times. Changing the algorithm requires an offline update.

hash_ring_reset_interval = 15
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Time (in seconds) after which the hash ring is considered outdated and is refreshed on the next access.

host = basque
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Name of this node. This can be an opaque identifier. It is not necessarily a hostname, FQDN, or IP address. However, the node name must be valid within an AMQP key, and if using ZeroMQ (will be removed in the Stein release), a valid hostname, FQDN, or IP address.

http_basic_auth_user_file = /etc/ironic/htpasswd
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to Apache format user authentication file used when auth_strategy=http_basic

image_download_concurrency = 20
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# How many image downloads and raw format conversions to run in parallel. Only affects image caches.

isolinux_bin = /usr/lib/syslinux/isolinux.bin
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to isolinux binary file.

isolinux_config_template = $pybasedir/common/isolinux_config.template
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Template file for isolinux configuration file.

ldlinux_c32 = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to ldlinux.c32 file. This file is required for syslinux 5.0 or later. If not specified, the file is looked for in "/usr/lib/syslinux/modules/bios/ldlinux.c32" and "/usr/share/syslinux/ldlinux.c32".

log_in_db_max_size = 4096
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Max number of characters of any node last_error/maintenance_reason pushed to database.

minimum_memory_wait_retries = 6
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of retries to hold onto the worker before failing or returning the thread to the pool if the conductor can automatically retry.

minimum_memory_wait_time = 15
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Seconds to wait between retries for free memory before launching the process. This, combined with ``memory_wait_retries`` allows the conductor to determine how long we should attempt to directly retry.

minimum_memory_warning_only = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Setting to govern if Ironic should only warn instead of attempting to hold back the request in order to prevent the exhaustion of system memory.

minimum_required_memory = 1024
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum memory in MiB for the system to have available prior to starting a memory intensive process on the conductor.

my_ip = 172.19.44.237
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# IPv4 address of this host. If unset, will determine the IP programmatically. If unable to do so, will use "127.0.0.1". NOTE: This field does accept an IPv6 address as an override for templates and URLs, however it is recommended that [DEFAULT]my_ipv6 is used along with DNS names for service URLs for dual-stack environments.

my_ipv6 = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# IP address of this host using IPv6. This value must be supplied via the configuration and cannot be adequately programmatically determined like the [DEFAULT]my_ip parameter for IPv4.

notification_level = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specifies the minimum level for which to send notifications. If not set, no notifications will be sent. The default is for this option to be unset.

parallel_image_downloads = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# Run image downloads and raw format conversions in parallel.

pecan_debug = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable pecan debug mode. WARNING: this is insecure and should not be used in a production environment.

pin_release_version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Used for rolling upgrades. Setting this option downgrades (or pins) the Bare Metal API, the internal ironic RPC communication, and the database objects to their respective versions, so they are compatible with older services. When doing a rolling upgrade from version N to version N+1, set (to pin) this to N. To unpin (default), leave it unset and the latest versions will be used.

pybasedir = /home/wataken44/oscfg-tool/lib/python3.12/site-packages/ironic
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Directory where the ironic python module is installed.

raw_image_growth_factor = 2.0
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The scale factor used for estimating the size of a raw image converted from compact image formats such as QCOW2. Default is 2.0, must be greater than 1.0.

rbac_service_project_name = service
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The project name utilized for Role Based Access Control checks for the reserved `service` project. This project is utilized for services to have accounts for cross-service communication. Often these accounts require higher levels of access, and effectively this permits accounts from the service to not be restricted to project scoping of responses. i.e. The service project user with a `service` role will be able to see nodes across all projects, similar to System scoped access. If not set to a value, and all service role access will be filtered matching an `owner` or `lessee`, if applicable. If an operator wishes to make behavior visible for all service role users across all projects, then a custom policy must be used to override the default "service_role" rule. It should be noted that the value of "service" is a default convention for OpenStack deployments, but the requsite access and details around end configuration are largely up to an operator if they are doing an OpenStack deployment manually.

rbac_service_role_elevated_access = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable elevated access for users with service role belonging to the 'rbac_service_project_name' project when using default policy. The default setting of disabled causes all service role requests to be scoped to the project the service account belongs to.

rootwrap_config = /etc/ironic/rootwrap.conf
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to the rootwrap configuration file to use for running commands as root.

rpc_transport = oslo
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Which RPC transport implementation to use between conductor and API services

shell_completion = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Display a shell completion script

state_path = $pybasedir
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Top-level directory for maintaining ironic's state.

tempdir = /tmp
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Temporary working directory, default is Python temp dir.

versioned_notifications_topics = ['ironic_versioned_notifications']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specifies the topics for the versioned notifications issued by Ironic.
# 
# The default value is fine for most deployments and rarely needs to be changed.
# However, if you have a third-party service that consumes versioned
# notifications, it might be worth getting a topic for that service.
# Ironic will send a message containing a versioned notification payload to each
# topic queue in this list.
# 
# The list of versioned notifications is visible in
# https://docs.openstack.org/ironic/latest/admin/notifications.html

webserver_connection_timeout = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Connection timeout when accessing/interacting with remote web servers with images or other artifacts being accessed.

webserver_verify_ca = True
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# CA certificates to be used for certificate verification. This can be either a Boolean value or a path to a CA_BUNDLE file.If set to True, the certificates present in the standard path are used to verify the host certificates.If set to False, the conductor will ignore verifying the SSL certificate presented by the host.If it"s a path, conductor uses the specified certificate for SSL verification. If the path does not exist, the behavior is same as when this value is set to True i.e the certificates present in the standard path are used for SSL verification.Defaults to True.



[agent]
# agent options
# None

agent_api_version = v1
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# API version to use for communicating with the ramdisk agent.

allow_md5_checksum = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# When enabled, the agent will be notified it is permitted to consider MD5 checksums. This option is expected to change to a default of False in a 2024 release of Ironic.

api_ca_file = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to the TLS CA that is used to start the bare metal API. In some boot methods this file can be passed to the ramdisk.

certificates_path = /var/lib/ironic/certificates
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to store auto-generated TLS certificates used to validate connections to the ramdisk.

command_timeout = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (in seconds) for IPA commands.

command_wait_attempts = 100
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of attempts to check for asynchronous commands completion before timing out.

command_wait_interval = 6
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait for between checks for asynchronous commands completion.

deploy_logs_collect = on_failure
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether Ironic should collect the deployment logs on deployment failure (on_failure), always or never.

deploy_logs_local_path = /var/log/ironic/deploy
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The path to the directory where the logs should be stored, used when the deploy_logs_storage_backend is configured to "local".

deploy_logs_storage_backend = local
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The name of the storage backend where the logs will be stored.

deploy_logs_swift_container = ironic_deploy_logs_container
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The name of the Swift container to store the logs, used when the deploy_logs_storage_backend is configured to "swift".

deploy_logs_swift_days_to_expire = 30
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of days before a log object is marked as expired in Swift. If None, the logs will be kept forever or until manually deleted. Used when the deploy_logs_storage_backend is configured to "swift".

image_download_source = http
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specifies whether direct deploy interface should try to use the image source directly or if ironic should cache the image on the conductor and serve it from ironic's own http server.

manage_agent_boot = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether Ironic will manage booting of the agent ramdisk. If set to False, you will need to configure your mechanism to allow booting the agent ramdisk.

max_command_attempts = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# This is the maximum number of attempts that will be done for IPA commands that fails due to network problems.

memory_consumed_by_agent = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The memory size in MiB consumed by agent when it is booted on a bare metal node. This is used for checking if the image can be downloaded and deployed on the bare metal node after booting agent ramdisk. This may be set according to the memory consumed by the agent ramdisk image.

neutron_agent_max_attempts = 100
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Max number of attempts to validate a Neutron agent status before raising network error for a dead agent.

neutron_agent_poll_interval = 2
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The number of seconds Neutron agent will wait between polling for device changes. This value should be the same as CONF.AGENT.polling_interval in Neutron configuration.

neutron_agent_status_retry_interval = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Wait time in seconds between attempts for validating Neutron agent status.

post_deploy_get_power_state_retries = 6
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of times to retry getting power state to check if bare metal node has been powered off after a soft power off.

post_deploy_get_power_state_retry_interval = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Amount of time (in seconds) to wait between polling power state after trigger soft poweroff.

require_tls = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If set to True, callback URLs without https:// will be rejected by the conductor.

stream_raw_images = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether the agent ramdisk should stream raw images directly onto the disk or not. By streaming raw images directly onto the disk the agent ramdisk will not spend time copying the image to a tmpfs partition (therefore consuming less memory) prior to writing it to the disk. Unless the disk where the image will be copied to is really slow, this option should be set to True. Defaults to True.

verify_ca = True
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to the TLS CA to validate connection to the ramdisk. Set to True to use the system default CA storage. Set to False to disable validation. Ignored when automatic TLS setup is used.



[anaconda]
# Anaconda/kickstart interface options
# None

default_ks_template = $pybasedir/drivers/modules/ks.cfg.template
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# kickstart template to use when no kickstart template is specified in the instance_info or the glance OS image.

insecure_heartbeat = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Option to allow the kickstart configuration to be informed if SSL/TLS certificate verificaiton should be enforced, or not. This option exists largely to facilitate easy testing and use of the ``anaconda`` deployment interface. When this option is set, heartbeat operations, depending on the contents of the utilized kickstart template, may not enfore TLS certificate verification.



[ansible]
# ansible options
# None

ansible_extra_args = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Extra arguments to pass on every invocation of Ansible.

ansible_playbook_script = ansible-playbook
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to "ansible-playbook" script. Default will search the $PATH configured for user running ironic-conductor process. Provide the full path when ansible-playbook is not in $PATH or installed in not default location.

config_file_path = $pybasedir/drivers/modules/ansible/playbooks/ansible.cfg
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to ansible configuration file. If set to empty, system default will be used.

default_clean_playbook = clean.yaml
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path (relative to $playbooks_path or absolute) to the default playbook used for node cleaning. It may be overridden by per-node 'ansible_clean_playbook' option in node's 'driver_info' field.

default_clean_steps_config = clean_steps.yaml
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path (relative to $playbooks_path or absolute) to the default auxiliary cleaning steps file used during the node cleaning. It may be overridden by per-node 'ansible_clean_steps_config' option in node's 'driver_info' field.

default_deploy_playbook = deploy.yaml
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path (relative to $playbooks_path or absolute) to the default playbook used for deployment. It may be overridden by per-node 'ansible_deploy_playbook' option in node's 'driver_info' field.

default_key_file = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Absolute path to the private SSH key file to use by Ansible by default when connecting to the ramdisk over SSH. Default is to use default SSH keys configured for the user running the ironic-conductor service. Private keys with password must be pre-loaded into 'ssh-agent'. It may be overridden by per-node 'ansible_key_file' option in node's 'driver_info' field.

default_python_interpreter = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Absolute path to the python interpreter on the managed machines. It may be overridden by per-node 'ansible_python_interpreter' option in node's 'driver_info' field. By default, ansible uses /usr/bin/python

default_shutdown_playbook = shutdown.yaml
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path (relative to $playbooks_path or absolute) to the default playbook used for graceful in-band shutdown of the node. It may be overridden by per-node 'ansible_shutdown_playbook' option in node's 'driver_info' field.

default_username = ansible
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Name of the user to use for Ansible when connecting to the ramdisk over SSH. It may be overridden by per-node 'ansible_username' option in node's 'driver_info' field.

extra_memory = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Extra amount of memory in MiB expected to be consumed by Ansible-related processes on the node. Affects decision whether image will fit into RAM.

image_store_cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specific CA bundle to use for validating SSL connections to the image store. If not specified, CA available in the ramdisk will be used. Is not used by default playbooks included with the driver. Suitable for environments that use self-signed certificates.

image_store_certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Client cert to use for SSL connections to image store. Is not used by default playbooks included with the driver.

image_store_insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Skip verifying SSL connections to the image store when downloading the image. Setting it to "True" is only recommended for testing environments that use self-signed certificates.

image_store_keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Client key to use for SSL connections to image store. Is not used by default playbooks included with the driver.

playbooks_path = $pybasedir/drivers/modules/ansible/playbooks
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to directory with playbooks, roles and local inventory.

post_deploy_get_power_state_retries = 6
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of times to retry getting power state to check if bare metal node has been powered off after a soft power off. Value of 0 means do not retry on failure.

post_deploy_get_power_state_retry_interval = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Amount of time (in seconds) to wait between polling power state after trigger soft poweroff.

verbosity = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Set ansible verbosity level requested when invoking "ansible-playbook" command. 4 includes detailed SSH session logging. Default is 4 when global debug is enabled and 0 otherwise.



[api]
# Options for the ironic-api service
# None

api_workers = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of workers for OpenStack Ironic API service. The default is equal to the number of CPUs available, but not more than 4. One worker is used if the CPU number cannot be detected.

enable_ssl_api = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable the integrated stand-alone API to service requests via HTTPS instead of HTTP. If there is a front-end service performing HTTPS offloading from the service, this option should be False; note, you will want to enable proxy headers parsing with [oslo_middleware]enable_proxy_headers_parsing option or configure [api]public_endpoint option to set URLs in responses to the SSL terminated one.

host_ip = 0.0.0.0
# class:      <class 'oslo_config.cfg.HostAddressOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The IP address or hostname on which ironic-api listens.

max_limit = 1000
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of items returned in a single response from a collection resource.

network_data_schema = $pybasedir/api/controllers/v1/network-data-schema.json
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Schema for network data used by this deployment.

port = 6385
# class:      <class 'oslo_config.cfg.PortOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The TCP port on which ironic-api listens.

project_admin_can_manage_own_nodes = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If a project scoped administrative user is permitted to create/delte baremetal nodes in their project.

public_endpoint = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Public URL to use when building the links to the API resources (for example, "https://ironic.rocks:6384"). If None the links will be built using the request's host URL. If the API is operating behind a proxy, you will want to change this to represent the proxy's URL. Defaults to None. Ignored when proxy headers parsing is enabled via [oslo_middleware]enable_proxy_headers_parsing option.

ramdisk_heartbeat_timeout = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum interval (in seconds) for agent heartbeats.

restrict_lookup = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to restrict the lookup API to only nodes in certain states.

unix_socket = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Unix socket to listen on. Disables host_ip and port.

unix_socket_mode = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# File mode (an octal number) of the unix socket to listen on. Ignored if unix_socket is not set.



[audit]
# audit options
# None

audit_map_file = /etc/ironic/api_audit_map.conf
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to audit map file for ironic-api service. Used only when API audit is enabled.

enabled = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable auditing of API requests (for ironic-api service).

ignore_req_list = 
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Comma separated list of Ironic REST API HTTP methods to be ignored during audit logging. For example: auditing will not be done on any GET or POST requests if this is set to "GET,POST". It is used only when API audit is enabled.

namespace = openstack
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# namespace prefix for generated id



[audit_middleware_notifications]
# audit_middleware_notifications options
# None

driver = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The Driver to handle sending notifications. Possible values are messaging, messagingv2, routing, log, test, noop. If not specified, then value from oslo_messaging_notifications conf section is used.

topics = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of AMQP topics used for OpenStack notifications. If not specified, then value from  oslo_messaging_notifications conf section is used.

transport_url = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A URL representing messaging driver to use for notification. If not specified, we fall back to the same configuration used for RPC.

use_oslo_messaging = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Indicate whether to use oslo_messaging as the notifier. If set to False, the local logger will be used as the notifier. If set to True, the oslo_messaging package must also be present. Otherwise, the local will be used instead.



[cache]
# cache options
# None

backend = dogpile.cache.null
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Cache backend module. For eventlet-based or environments with hundreds of threaded servers, Memcache with pooling (oslo_cache.memcache_pool) is recommended. For environments with less than 100 threaded servers, Memcached (dogpile.cache.memcached) or Redis (dogpile.cache.redis) is recommended. Test environments with a single instance of the server can use the dogpile.cache.memory backend.

backend_argument = []
# class:      <class 'oslo_config.cfg.MultiStrOpt'>
# deprecated: False
# multi:      True
# required:   False
# help:
# Arguments supplied to the backend module. Specify this option once per argument to be passed to the dogpile.cache backend. Example format: "<argname>:<value>".

backend_expiration_time = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Expiration time in cache backend to purge expired records automatically. This should be greater than expiration_time and all cache_time options

config_prefix = cache.oslo
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Prefix for building the configuration dictionary for the cache region. This should not need to be changed unless there is another dogpile.cache region with the same configuration name.

dead_timeout = 60
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Time in seconds before attempting to add a node back in the pool in the HashClient's internal mechanisms.

debug_cache_backend = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Extra debugging from the cache backend (cache keys, get/set/delete/etc calls). This is only really useful if you need to see the specific cache-backend get/set/delete calls with the keys/values.  Typically this should be left set to false.

enable_retry_client = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable retry client mechanisms to handle failure. Those mechanisms can be used to wrap all kind of pymemcache clients. The wrapper allows you to define how many attempts to make and how long to wait between attemots.

enable_socket_keepalive = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Global toggle for the socket keepalive of dogpile's pymemcache backend

enabled = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Global toggle for caching.

enforce_fips_mode = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Global toggle for enforcing the OpenSSL FIPS mode. This feature requires Python support. This is available in Python 3.9 in all environments and may have been backported to older Python versions on select environments. If the Python executable used does not support OpenSSL FIPS mode, an exception will be raised. Currently supported by ``dogpile.cache.bmemcache``, ``dogpile.cache.pymemcache`` and ``oslo_cache.memcache_pool``.

expiration_time = 600
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default TTL, in seconds, for any cached item in the dogpile.cache region. This applies to any cached method that doesn't have an explicit cache expiration time defined for it.

hashclient_retry_attempts = 2
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Amount of times a client should be tried before it is marked dead and removed from the pool in the HashClient's internal mechanisms.

hashclient_retry_delay = 1
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Time in seconds that should pass between retry attempts in the HashClient's internal mechanisms.

memcache_dead_retry = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds memcached server is considered dead before it is tried again. (dogpile.cache.memcache and oslo_cache.memcache_pool backends only).

memcache_password = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# the password for the memcached which SASL enabled

memcache_pool_connection_get_timeout = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds that an operation will wait to get a memcache client connection.

memcache_pool_flush_on_reconnect = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Global toggle if memcache will be flushed on reconnect. (oslo_cache.memcache_pool backend only).

memcache_pool_maxsize = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Max total number of open connections to every memcached server. (oslo_cache.memcache_pool backend only).

memcache_pool_unused_timeout = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds a connection to memcached is held unused in the pool before it is closed. (oslo_cache.memcache_pool backend only).

memcache_sasl_enabled = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable the SASL(Simple Authentication and SecurityLayer) if the SASL_enable is true, else disable.

memcache_servers = ['localhost:11211']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Memcache servers in the format of "host:port". This is used by backends dependent on Memcached.If ``dogpile.cache.memcached`` or ``oslo_cache.memcache_pool`` is used and a given host refer to an IPv6 or a given domain refer to IPv6 then you should prefix the given address with the address family (``inet6``) (e.g ``inet6[::1]:11211``, ``inet6:[fd12:3456:789a:1::1]:11211``, ``inet6:[controller-0.internalapi]:11211``). If the address family is not given then these backends will use the default ``inet`` address family which corresponds to IPv4

memcache_socket_timeout = 1.0
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout in seconds for every call to a server. (dogpile.cache.memcache and oslo_cache.memcache_pool backends only).

memcache_username = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# the user name for the memcached which SASL enabled

proxies = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Proxy classes to import that will affect the way the dogpile.cache backend functions. See the dogpile.cache documentation on changing-backend-behavior.

redis_db = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Database id in Redis server

redis_password = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# the password for redis

redis_sentinel_service_name = mymaster
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Service name of the redis sentinel cluster.

redis_sentinels = ['localhost:26379']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Redis sentinel servers in the format of "host:port"

redis_server = localhost:6379
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Redis server in the format of "host:port"

redis_socket_timeout = 1.0
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout in seconds for every call to a server. (dogpile.cache.redis and dogpile.cache.redis_sentinel backends only).

redis_username = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# the user name for redis

retry_attempts = 2
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of times to attempt an action before failing.

retry_delay = 0
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to sleep between each attempt.

socket_keepalive_count = 1
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of keepalive probes TCP should send before dropping the connection. Should be a positive integer greater than zero.

socket_keepalive_idle = 1
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The time (in seconds) the connection needs to remain idle before TCP starts sending keepalive probes. Should be a positive integer most greater than zero.

socket_keepalive_interval = 1
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The time (in seconds) between individual keepalive probes. Should be a positive integer greater than zero.

tls_allowed_ciphers = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Set the available ciphers for sockets created with the TLS context. It should be a string in the OpenSSL cipher list format. If not specified, all OpenSSL enabled ciphers will be available. Currently supported by ``dogpile.cache.bmemcache``, ``dogpile.cache.pymemcache`` and ``oslo_cache.memcache_pool``.

tls_cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to a file of concatenated CA certificates in PEM format necessary to establish the caching servers' authenticity. If tls_enabled is False, this option is ignored.

tls_certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to a single file in PEM format containing the client's certificate as well as any number of CA certificates needed to establish the certificate's authenticity. This file is only required when client side authentication is necessary. If tls_enabled is False, this option is ignored.

tls_enabled = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Global toggle for TLS usage when communicating with the caching servers. Currently supported by ``dogpile.cache.bmemcache``, ``dogpile.cache.pymemcache``, ``oslo_cache.memcache_pool``, ``dogpile.cache.redis`` and ``dogpile.cache.redis_sentinel``.

tls_keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to a single file containing the client's private key in. Otherwise the private key will be taken from the file specified in tls_certfile. If tls_enabled is False, this option is ignored.



[cinder]
# cinder options
# None

action_retries = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of retries in the case of a failed action (currently only used when detaching volumes).

action_retry_interval = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Retry interval in seconds in the case of a failed action (only specific actions are retried).

auth-url = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   True
# help:
# Authentication URL

auth_section = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Config Section from which to load plugin specific options

auth_type = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication type to load

cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded Certificate Authority to use when verifying HTTPs connections.

certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate cert file

collect-timing = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Collect per-API call timing information.

connect-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for connection errors.

connect-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for connection errors. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

default-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

default-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID to scope to

domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name to scope to

endpoint-override = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Always use this endpoint URL for requests for this client. NOTE: The unversioned endpoint should be specified here; to request a particular API version, use the `version`, `min-version`, and/or `max-version` options.

insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verify HTTPS connections.

interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# The default interface for endpoint URL discovery.

keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate key file

max-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum major version of a given API, intended to be used as the upper bound of a range with min_version. Mutually exclusive with version.

min-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The minimum major version of a given API, intended to be used as the lower bound of a range with max_version. Mutually exclusive with version. If min_version is given with no max_version it is as if max version is "latest".

password = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's password

project-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID containing project

project-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name containing project

project-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project ID to scope to

project-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project name to scope to

region-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default region_name for endpoint URL discovery.

retriable-status-codes = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of retriable HTTP status codes that should be retried. If not set default to  [503]

retries = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Client retries in the case of a failed request connection.

service-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_name for endpoint URL discovery.

service-type = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_type for endpoint URL discovery.

split-loggers = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Log requests to multiple loggers.

status-code-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for retriable HTTP status codes.

status-code-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for retriable status codes. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

system-scope = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Scope for system operations

tenant-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant ID

tenant-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant Name

timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout value for http requests

trust-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ID of the trust to use as a trustee use

user-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain id

user-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain name

user-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User id

username = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Username

valid-interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of interfaces, in order of preference, for endpoint URL.

version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum Major API version within a given Major API version for endpoint URL discovery. Mutually exclusive with min_version and max_version



[conductor]
# conductor options
# None

allow_deleting_available_nodes = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Allow deleting nodes which are in state 'available'. Defaults to True.

allow_provisioning_in_maintenance = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to allow nodes to enter or undergo deploy or cleaning when in maintenance mode. If this option is set to False, and a node enters maintenance during deploy or cleaning, the process will be aborted after the next heartbeat. Automated cleaning or making a node available will also fail. If True (the default), the process will begin and will pause after the node starts heartbeating. Moving it from maintenance will make the process continue.

automated_clean = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enables or disables automated cleaning. Automated cleaning is a configurable set of steps, such as erasing disk drives, that are performed on the node to ensure it is in a baseline state and ready to be deployed to. This is done after instance deletion as well as during the transition from a "manageable" to "available" state. When enabled, the particular steps performed to clean a node depend on which driver that node is managed by; see the individual driver's documentation for details. NOTE: The introduction of the cleaning operation causes instance deletion to take significantly longer. In an environment where all tenants are trusted (eg, because there is only one tenant), this option could be safely disabled.

automatic_lessee = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If the conductor should record the Project ID indicated by Keystone for a requested deployment. Allows rights to be granted to directly access the deployed node as a lessee within the RBAC security model. The conductor does *not* record this value otherwise, and this information is not backfilled for prior instances which have been deployed.

bootloader = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Glance ID, http:// or file:// URL of the EFI system partition image containing EFI boot loader. This image will be used by ironic when building UEFI-bootable ISO out of kernel and ramdisk. Required for UEFI boot from partition images.

cache_clean_up_interval = 3600
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval between cleaning up image caches, in seconds. Set to 0 to disable periodic clean-up.

check_allocations_interval = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval between checks of orphaned allocations, in seconds. Set to 0 to disable checks.

check_provision_state_interval = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval between checks of provision timeouts, in seconds. Set to 0 to disable checks.

check_rescue_state_interval = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval (seconds) between checks of rescue timeouts.

clean_callback_timeout = 1800
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (seconds) to wait for a callback from the ramdisk doing the cleaning. If the timeout is reached the node will be put in the "clean failed" provision state. Set to 0 to disable timeout.

clean_step_priority_override = {}
# class:      <class 'oslo_config.cfg.MultiOpt'>
# deprecated: False
# multi:      True
# required:   False
# help:
# Priority to run automated clean steps for both in-band and out of band clean steps, provided in interface.step_name:priority format, e.g. deploy.erase_devices_metadata:123. The option can be specified multiple times to define priorities for multiple steps. If set to 0, this specific step will not run during cleaning. If unset for an inband clean step, will use the priority set in the ramdisk.

conductor_always_validates_images = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Security Option to enable the conductor to *always* inspect the image content of any requested deploy, even if the deployment would have normally bypassed the conductor's cache. When this is set to False, the Ironic-Python-Agent is responsible for any necessary image checks. Setting this to True will result in a higher utilization of resources (disk space, network traffic) as the conductor will evaluate *all* images. This option is *not* mutable, and requires a service restart to change. This option requires [conductor]disable_deep_image_inspection to be set to False.

conductor_group = 
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Name of the conductor group to join. Can be up to 255 characters and is case insensitive. This conductor will only manage nodes with a matching "conductor_group" field set on the node.

configdrive_swift_container = ironic_configdrive_container
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Name of the Swift container to store config drive data. Used when configdrive_use_object_store is True.

configdrive_swift_temp_url_duration = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The timeout (in seconds) after which a configdrive temporary URL becomes invalid. Defaults to deploy_callback_timeout if it is set, otherwise to 1800 seconds. Used when configdrive_use_object_store is True.

deploy_callback_timeout = 1800
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (seconds) to wait for a callback from a deploy ramdisk. Set to 0 to disable timeout.

deploy_kernel = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# DEPRECATED: Glance ID, http:// or file:// URL of the kernel of the default deploy image.

deploy_kernel_by_arch = {}
# class:      <class 'oslo_config.cfg.DictOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A dictionary of key-value pairs of each architecture with the Glance ID, http:// or file:// URL of the kernel of the default deploy image.

deploy_ramdisk = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# DEPRECATED: Glance ID, http:// or file:// URL of the initramfs of the default deploy image.

deploy_ramdisk_by_arch = {}
# class:      <class 'oslo_config.cfg.DictOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A dictionary of key-value pairs of each architecture with the Glance ID, http:// or file:// URL of the initramfs of the default deploy image.

disable_deep_image_inspection = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Security Option to permit an operator to disable file content inspections. Under normal conditions, the conductor will inspect requested image contents which are transferred through the conductor. Disabling this option is not advisable and opens the risk of unsafe images being processed which may allow an attacker to leverage unsafe features in various disk image formats to perform a variety of unsafe and potentially compromising actions. This option is *not* mutable, and requires a service restart to change.

enable_mdns = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to enable publishing the baremetal API endpoint via multicast DNS.

force_power_state_during_sync = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# During sync_power_state, should the hardware power state be set to the state recorded in the database (True) or should the database be updated based on the hardware state (False).

heartbeat_interval = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Seconds between conductor heart beats.

heartbeat_timeout = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum time (in seconds) since the last check-in of a conductor. A conductor is considered inactive when this time has been exceeded.

inspect_wait_timeout = 1800
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (seconds) for waiting for node inspection. 0 - unlimited.

max_concurrent_clean = 50
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of concurrent nodes in cleaning which are permitted in this Ironic system. If this limit is reached, new requests will be rejected until the number of nodes in cleaning is lower than this maximum. As this is a security mechanism requests are not queued, and this setting is a global setting applying to all requests this conductor receives, regardless of access rights. The concurrent clean limit cannot be disabled.

max_concurrent_deploy = 250
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of concurrent nodes in deployment which are permitted in this Ironic system. If this limit is reached, new requests will be rejected until the number of deployments in progress is lower than this maximum. As this is a security mechanism requests are not queued, and this setting is a global setting applying to all requests this conductor receives, regardless of access rights. The concurrent deployment limit cannot be disabled.

max_conductor_wait_step_seconds = 30
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of seconds which a step can be requested to explicitly sleep or wait. This value should be changed sparingly as it holds a conductor thread and if used across many nodes at once can exhaust a conductor's resources. Thiscapability has a hard coded maximum wait of 1800 seconds, or 30 minutes. If you need to wait longer than the maximum value, we recommend exploring hold steps.

node_history = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Boolean value, default True, if node event history is to be recorded. Errors and other noteworthy events in relation to a node are journaled to a database table which incurs some additional load. A periodic task does periodically remove entries from the database. Please note, if this is disabled, the conductor will continue to purge entries as long as [conductor]node_history_cleanup_batch_count is not 0.

node_history_cleanup_batch_count = 1000
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The target number of node history records to purge from the database when performing clean-up. Deletes are performed by node, and a node with excess records for a node will still be deleted. Defaults to 1000. Operators who find node history building up may wish to lower this threshold and decrease the time between cleanup operations using the ``node_history_cleanup_interval`` setting.

node_history_cleanup_interval = 86400
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval in seconds at which node history entries can be cleaned up in the database. Setting to 0 disables the periodic task. Defaults to once a day, or 86400 seconds.

node_history_max_entries = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of history entries which will be stored in the database per node. Default is 300. This setting excludes the minimum number of days retained using the [conductor]node_history_minimum_days setting.

node_history_minimum_days = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The minimum number of days to explicitly keep on hand in the database history entries for nodes. This is exclusive from the [conductor]node_history_max_entries setting as users of this setting are anticipated to need to retain history by policy.

node_locked_retry_attempts = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of attempts to grab a node lock.

node_locked_retry_interval = 1
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Seconds to sleep between node lock attempts.

periodic_max_workers = 8
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of worker threads that can be started simultaneously by a periodic task. Should be less than RPC thread pool size.

permit_child_node_step_async_result = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# This option allows child node steps to not error if the resulting step execution returned a "wait" state. Under normal conditions, child nodes are not expected to request a wait state. This option exists for operators to use if needed to perform specific tasks where this is known acceptable. Use at yourown risk!

permitted_image_formats = ['raw', 'qcow2', 'iso']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The supported list of image formats which are permitted for deployment with Ironic. If an image format outside of this list is detected, the image validation logic will fail the deployment process.

power_failure_recovery_interval = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval (in seconds) between checking the power state for nodes previously put into maintenance mode due to power synchronization failure. A node is automatically moved out of maintenance mode once its power state is retrieved successfully. Set to 0 to disable this check.

power_state_change_timeout = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait for power operations to complete, i.e., so that a baremetal node is in the desired power state. If timed out, the power operation is considered a failure.

power_state_sync_max_retries = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# During sync_power_state failures, limit the number of times Ironic should try syncing the hardware node power state with the node power state in DB

poweroff_in_cleanfail = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If True power off nodes in the ``clean failed`` state. Default False. Option may be unsafe when using Cleaning to perform hardware-transformative actions such as firmware upgrade.

poweroff_in_servicefail = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If True power off nodes in the ``service failed`` state. Default False. Option may be unsafe when using service to perform hardware-transformative actions such as firmware upgrade.

require_rescue_password_hashed = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Option to cause the conductor to not fallback to an un-hashed version of the rescue password, permitting rescue with older ironic-python-agent ramdisks.

rescue_callback_timeout = 1800
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (seconds) to wait for a callback from the rescue ramdisk. If the timeout is reached the node will be put in the "rescue failed" provision state. Set to 0 to disable timeout.

rescue_kernel = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# DEPRECATED: Glance ID, http:// or file:// URL of the kernel of the default rescue image.

rescue_kernel_by_arch = {}
# class:      <class 'oslo_config.cfg.DictOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A dictionary of key-value pairs of each architecture with the Glance ID, http:// or file:// URL of the kernel of the default rescue image.

rescue_password_hash_algorithm = sha256
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Password hash algorithm to be used for the rescue password.

rescue_ramdisk = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# DEPRECATED: Glance ID, http:// or file:// URL of the initramfs of the default rescue image.

rescue_ramdisk_by_arch = {}
# class:      <class 'oslo_config.cfg.DictOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A dictionary of key-value pairs of each architecture with the Glance ID, http:// or file:// URL of the initramfs of the default rescue image.

soft_power_off_timeout = 600
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (in seconds) of soft reboot and soft power off operation. This value always has to be positive.

sync_local_state_interval = 180
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# When conductors join or leave the cluster, existing conductors may need to update any persistent local state as nodes are moved around the cluster. This option controls how often, in seconds, each conductor will check for nodes that it should "take over". Set it to 0 (or a negative value) to disable the check entirely.

sync_power_state_interval = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval between syncing the node power state to the database, in seconds. Set to 0 to disable syncing.

sync_power_state_workers = 8
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of worker threads that can be started simultaneously to sync nodes power states from the periodic task.

verify_step_priority_override = {}
# class:      <class 'oslo_config.cfg.MultiOpt'>
# deprecated: False
# multi:      True
# required:   False
# help:
# Priority to run automated verify steps provided in interface.step_name:priority format,e.g. management.clear_job_queue:123. The option can be specified multiple times to define priorities for multiple steps. If set to 0, this specific step will not run during verification.

workers_pool_size = 100
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The size of the workers greenthread pool. Note that 2 threads will be reserved by the conductor itself for handling heart beats and periodic tasks. On top of that, `sync_power_state_workers` will take up to 7 green threads with the default value of 8.



[console]
# console options
# None

kill_timeout = 1
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Time (in seconds) to wait for the console subprocess to exit before sending SIGKILL signal.

port_range = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A range of ports available to be used for the console proxy service running on the host of ironic conductor, in the form of <start>:<stop>. This option is used by both Shellinabox and Socat console

socat_address = $my_ip
# class:      <class 'oslo_config.cfg.IPOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# IP address of Socat service running on the host of ironic conductor. Used only by Socat console.

subprocess_checking_interval = 1
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Time interval (in seconds) for checking the status of console subprocess.

subprocess_timeout = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Time (in seconds) to wait for the console subprocess to start.

terminal = shellinaboxd
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to serial console terminal program. Used only by Shell In A Box console.

terminal_cert_dir = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Directory containing the terminal SSL cert (PEM) for serial console access. Used only by Shell In A Box console.

terminal_pid_dir = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Directory for holding terminal pid files. If not specified, the temporary directory will be used.

terminal_timeout = 600
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (in seconds) for the terminal session to be closed on inactivity. Set to 0 to disable timeout. Used only by Socat console.



[database]
# database options
# None

asyncio_connection = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The SQLAlchemy asyncio connection string to use to connect to the database.

asyncio_slave_connection = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The SQLAlchemy asyncio connection string to use to connect to the slave database.

backend = sqlalchemy
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The back end to use for the database.

connection = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The SQLAlchemy connection string to use to connect to the database.

connection_debug = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verbosity of SQL debugging information: 0=None, 100=Everything.

connection_parameters = 
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional URL parameters to append onto the connection URL at connect time; specify as param1=value1&param2=value2&...

connection_recycle_time = 3600
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Connections which have been present in the connection pool longer than this number of seconds will be replaced with a new one the next time they are checked out from the pool.

connection_trace = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Add Python stack traces to SQL as comment strings.

db_inc_retry_interval = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If True, increases the interval between retries of a database operation up to db_max_retry_interval.

db_max_retries = 20
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum retries in case of connection error or deadlock error before error is raised. Set to -1 to specify an infinite retry count.

db_max_retry_interval = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If db_inc_retry_interval is set, the maximum seconds between retries of a database operation.

db_retry_interval = 1
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Seconds between retries of a database transaction.

max_overflow = 50
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If set, use this value for max_overflow with SQLAlchemy.

max_pool_size = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of SQL connections to keep open in a pool. Setting a value of 0 indicates no limit.

max_retries = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of database connection retries during startup. Set to -1 to specify an infinite retry count.

mysql_engine = InnoDB
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# MySQL engine to use.

mysql_sql_mode = TRADITIONAL
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The SQL mode to be used for MySQL sessions. This option, including the default, overrides any server-set SQL mode. To use whatever SQL mode is set by the server configuration, set this to no value. Example: mysql_sql_mode=

mysql_wsrep_sync_wait = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# For Galera only, configure wsrep_sync_wait causality checks on new connections.  Default is None, meaning don't configure any setting.

pool_timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If set, use this value for pool_timeout with SQLAlchemy.

retry_interval = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval between retries of opening a SQL connection.

slave_connection = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The SQLAlchemy connection string to use to connect to the slave database.

sqlite_max_wait_for_retry = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of seconds to retry SQLite database locks, after which the original exception will be returned to the caller. This does not presently apply to internal node lock release actions and DB actions centered around the completion of tasks.

sqlite_retries = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If SQLite database operation retry logic is enabled or not. Enabled by default.

sqlite_synchronous = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If True, SQLite uses synchronous mode.

use_db_reconnect = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable the experimental use of database reconnect on connection lost.



[deploy]
# deploy options
# None

configdrive_use_object_store = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to upload the config drive to object store. Set this option to True to store config drive in a swift endpoint.

continue_if_disk_secure_erase_fails = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Defines what to do if a secure erase operation (NVMe or ATA) fails during cleaning in the Ironic Python Agent. If False, the cleaning operation will fail and the node will be put in ``clean failed`` state. If True, shred will be invoked and cleaning will continue.

create_configuration_priority = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority to run in-band clean step that creates RAID configuration from devices, via the Ironic Python Agent ramdisk. If unset, will use the priority set in the ramdisk (defaults to 0 for the GenericHardwareManager). If set to 0, will not run during cleaning.

default_boot_mode = uefi
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default boot mode to use when no boot mode is requested in node's driver_info, capabilities or in the `instance_info` configuration. Currently the default boot mode is "uefi", but it was "bios" previously in Ironic. It is recommended to set an explicit value for this option, and if the setting or default differs from nodes, to ensure that nodes are configured specifically for their desired boot mode.

delete_configuration_priority = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority to run in-band clean step that erases RAID configuration from devices, via the Ironic Python Agent ramdisk. If unset, will use the priority set in the ramdisk (defaults to 0 for the GenericHardwareManager). If set to 0, will not run during cleaning.

disk_erasure_concurrency = 4
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Defines the target pool size used by Ironic Python Agent ramdisk to erase disk devices. The number of threads created to erase disks will not exceed this value or the number of disks to be erased.

enable_ata_secure_erase = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to support the use of ATA Secure Erase during the cleaning process. Defaults to True.

enable_nvme_secure_erase = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to support the use of NVMe Secure Erase during the cleaning process. Currently nvme-cli format command is supported with user-data and crypto modes, depending on device capabilities.Defaults to True.

erase_devices_metadata_priority = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority to run in-band clean step that erases metadata from devices, via the Ironic Python Agent ramdisk. If unset, will use the priority set in the ramdisk (defaults to 99 for the GenericHardwareManager). If set to 0, will not run during cleaning.

erase_devices_priority = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority to run in-band erase devices via the Ironic Python Agent ramdisk. If unset, will use the priority set in the ramdisk (defaults to 10 for the GenericHardwareManager). If set to 0, will not run during cleaning.

erase_skip_read_only = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If the ironic-python-agent should skip read-only devices when running the "erase_devices" clean step where block devices are zeroed out. This requires ironic-python-agent 6.0.0 or greater. By default a read-only device will cause non-metadata based cleaning operations to fail due to the possible operational security risk of data being retained between deployments of the bare metal node.

external_callback_url = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Agent callback URL of the bare metal API for boot methods such as virtual media, where images could be served outside of the provisioning network. Defaults to the configuration from [service_catalog].

external_http_url = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# URL of the ironic-conductor node's HTTP server for boot methods such as virtual media, where images could be served outside of the provisioning network. Does not apply when Swift is used. Defaults to http_url.

fast_track = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to allow deployment agents to perform lookup, heartbeat operations during initial states of a machine lifecycle and by-pass the normal setup procedures for a ramdisk. This feature also enables power operations which are part of deployment processes to be bypassed if the ramdisk has performed a heartbeat operation using the fast_track_timeout setting.

fast_track_timeout = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Seconds for which the last heartbeat event is to be considered valid for the purpose of a fast track sequence. This setting should generally be less than the number of seconds for "Power-On Self Test" and typical ramdisk start-up. This value should not exceed the [api]ramdisk_heartbeat_timeout setting.

http_image_subdir = agent_images
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The name of subdirectory under ironic-conductor node's HTTP root path which is used to place instance images for the direct deploy interface, when local HTTP service is incorporated to provide instance image instead of swift tempurls.

http_root = /httpboot
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ironic-conductor node's HTTP root path.

http_url = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ironic-conductor node's HTTP server URL. Example: http://192.1.2.3:8080

iso_cache_size = 20480
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum size (in MiB) of cache for master ISO images, including those in use.

iso_cache_ttl = 10080
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum TTL (in minutes) for old master ISO images in cache.

iso_master_path = /var/lib/ironic/master_iso_images
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On the ironic-conductor node, directory where master ISO images are stored on disk. Setting to the empty string disables image caching.

power_off_after_deploy_failure = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to power off a node after deploy failure. Defaults to True.

ramdisk_image_download_source = local
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specifies whether a boot iso image should be served from its own original location using the image source url directly, or if ironic should cache the image on the conductor and serve it from ironic's own http server.

shred_final_overwrite_with_zeros = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to write zeros to a node's block devices after writing random data. This will write zeros to the device even when deploy.shred_random_overwrite_iterations is 0. This option is only used if a device could not be ATA Secure Erased. Defaults to True.

shred_random_overwrite_iterations = 1
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# During shred, overwrite all block devices N times with random data. This is only used if a device could not be ATA Secure Erased. Defaults to 1.



[dhcp]
# dhcp options
# None

dhcp_provider = neutron
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# DHCP provider to use. "neutron" uses Neutron, "dnsmasq" uses the Dnsmasq provider, and "none" uses a no-op provider.



[disk_utils]
# disk_utils options
# None

image_convert_attempts = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of attempts to convert an image.

image_convert_memory_limit = 2048
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Memory limit for "qemu-img convert" in MiB. Implemented via the address space resource limit.



[dnsmasq]
# dnsmasq options
# None

dhcp_hostsdir = /etc/dnsmasq.d/hostsdir.d
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Directory where the "dnsmasq" provider will write host configuration files for an external Dnsmasq to read. Use the same path for the dhcp-hostsdir dnsmasq configuration directive.

dhcp_leasefile = /var/lib/dnsmasq/dnsmasq.leases
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Dnsmasq leases file for the "dnsmasq" driver to discover IP addresses of managed nodes. Use thesame path for the dhcp-leasefile dnsmasq configuration directive.

dhcp_optsdir = /etc/dnsmasq.d/optsdir.d
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Directory where the "dnsmasq" provider will write option configuration files for an external Dnsmasq to read. Use the same path for the dhcp-optsdir dnsmasq configuration directive.



[drac]
# drac options
# None

bios_factory_reset_timeout = 600
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum time (in seconds) to wait for factory reset of BIOS settings to complete.

boot_device_job_status_timeout = 30
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum amount of time (in seconds) to wait for the boot device configuration job to transition to the correct state to allow a reboot or power on to complete.

config_job_max_retries = 240
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of retries for the configuration job to complete successfully.

query_import_config_job_status_interval = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait between checking for completed import configuration task

query_raid_config_job_status_interval = 120
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval (in seconds) between periodic RAID job status checks to determine whether the asynchronous RAID configuration was successfully finished or not.

raid_job_timeout = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum time (in seconds) to wait for RAID job to complete



[fake]
# fake options
# None

bios_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake bios driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

boot_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake boot driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

deploy_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake deploy driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

firmware_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake firmware driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

inspect_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake inspect driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

management_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake management driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

power_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake power driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

raid_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake raid driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

rescue_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake rescue driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

storage_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake storage driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.

vendor_delay = 0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay in seconds for operations with the fake vendor driver. Two comma-delimited values will result in a delay with a triangular random distribution, weighted on the first value.



[glance]
# glance options
# None

allowed_direct_url_schemes = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A list of URL schemes that can be downloaded directly via the direct_url.  Currently supported schemes: [file].

auth-url = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   True
# help:
# Authentication URL

auth_section = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Config Section from which to load plugin specific options

auth_type = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication type to load

cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded Certificate Authority to use when verifying HTTPs connections.

certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate cert file

collect-timing = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Collect per-API call timing information.

connect-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for connection errors.

connect-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for connection errors. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

default-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

default-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID to scope to

domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name to scope to

endpoint-override = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Always use this endpoint URL for requests for this client. NOTE: The unversioned endpoint should be specified here; to request a particular API version, use the `version`, `min-version`, and/or `max-version` options.

insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verify HTTPS connections.

interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# The default interface for endpoint URL discovery.

keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate key file

max-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum major version of a given API, intended to be used as the upper bound of a range with min_version. Mutually exclusive with version.

min-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The minimum major version of a given API, intended to be used as the lower bound of a range with max_version. Mutually exclusive with version. If min_version is given with no max_version it is as if max version is "latest".

num_retries = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of retries when downloading an image from glance.

password = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's password

project-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID containing project

project-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name containing project

project-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project ID to scope to

project-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project name to scope to

region-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default region_name for endpoint URL discovery.

retriable-status-codes = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of retriable HTTP status codes that should be retried. If not set default to  [503]

service-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_name for endpoint URL discovery.

service-type = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_type for endpoint URL discovery.

split-loggers = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Log requests to multiple loggers.

status-code-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for retriable HTTP status codes.

status-code-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for retriable status codes. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

swift_account = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The account that Glance uses to communicate with Swift. The format is "AUTH_uuid". "uuid" is the UUID for the account configured in the glance-api.conf. For example: "AUTH_a422b2-91f3-2f46-74b7-d7c9e8958f5d30". If not set, the default value is calculated based on the ID of the project used to access Swift (as set in the [swift] section). Swift temporary URL format: "endpoint_url/api_version/account/container/object_id"

swift_account_prefix = AUTH
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The prefix added to the project uuid to determine the swift account.

swift_api_version = v1
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The Swift API version to create a temporary URL for. Defaults to "v1". Swift temporary URL format: "endpoint_url/api_version/account/container/object_id"

swift_container = glance
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The Swift container Glance is configured to store its images in. Defaults to "glance", which is the default in glance-api.conf. Swift temporary URL format: "endpoint_url/api_version/account/container/object_id"

swift_endpoint_url = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The "endpoint" (scheme, hostname, optional port) for the Swift URL of the form "endpoint_url/api_version/account/container/object_id". Do not include trailing "/". For example, use "https://swift.example.com". If using RADOS Gateway, endpoint may also contain /swift path; if it does not, it will be appended. Used for temporary URLs, will be fetched from the service catalog, if not provided.

swift_store_multiple_containers_seed = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# This should match a config by the same name in the Glance configuration file. When set to 0, a single-tenant store will only use one container to store all images. When set to an integer value between 1 and 32, a single-tenant store will use multiple containers to store images, and this value will determine how many containers are created.

swift_temp_url_cache_enabled = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to cache generated Swift temporary URLs. Setting it to true is only useful when an image caching proxy is used. Defaults to False.

swift_temp_url_duration = 1200
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The length of time in seconds that the temporary URL will be valid for. Defaults to 20 minutes. If some deploys get a 401 response code when trying to download from the temporary URL, try raising this duration. This value must be greater than or equal to the value for swift_temp_url_expected_download_start_delay

swift_temp_url_expected_download_start_delay = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# This is the delay (in seconds) from the time of the deploy request (when the Swift temporary URL is generated) to when the IPA ramdisk starts up and URL is used for the image download. This value is used to check if the Swift temporary URL duration is large enough to let the image download begin. Also if temporary URL caching is enabled this will determine if a cached entry will still be valid when the download starts. swift_temp_url_duration value must be greater than or equal to this option's value. Defaults to 0.

swift_temp_url_key = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The secret token given to Swift to allow temporary URL downloads. Required for temporary URLs. For the Swift backend, the key on the service project (as set in the [swift] section) is used by default.

system-scope = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Scope for system operations

tenant-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant ID

tenant-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant Name

timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout value for http requests

trust-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ID of the trust to use as a trustee use

user-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain id

user-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain name

user-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User id

username = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Username

valid-interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of interfaces, in order of preference, for endpoint URL.

version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum Major API version within a given Major API version for endpoint URL discovery. Mutually exclusive with min_version and max_version



[healthcheck]
# healthcheck options
# None

enabled = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable the health check endpoint at /healthcheck. Note that this is unauthenticated. More information is available at https://docs.openstack.org/oslo.middleware/latest/reference/healthcheck_plugins.html.



[ibmc]
# ibmc options
# None

connection_attempts = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of attempts to try to connect to iBMC

connection_retry_interval = 4
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait between attempts to connect to iBMC



[ilo]
# ilo options
# None

ca_file = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# CA certificate file to validate iLO.

cert_path = /var/lib/ironic/ilo/
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On the ironic-conductor node, directory where ilo driver stores the CSR and the cert.

clean_priority_clear_secure_boot_keys = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority for clear_secure_boot_keys clean step. This step is not enabled by default. It can be enabled to clear all secure boot keys enrolled with iLO.

clean_priority_reset_bios_to_default = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority for reset_bios_to_default clean step.

clean_priority_reset_ilo = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority for reset_ilo clean step.

clean_priority_reset_ilo_credential = 30
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority for reset_ilo_credential clean step. This step requires "ilo_change_password" parameter to be updated in nodes's driver_info with the new password.

clean_priority_reset_secure_boot_keys_to_default = 20
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority for reset_secure_boot_keys clean step. This step will reset the secure boot keys to manufacturing defaults.

client_port = 443
# class:      <class 'oslo_config.cfg.PortOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Port to be used for iLO operations

client_timeout = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (in seconds) for iLO operations

default_boot_mode = auto
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default boot mode to be used in provisioning when "boot_mode" capability is not provided in the "properties/capabilities" of the node. The default is "auto" for backward compatibility. When "auto" is specified, default boot mode will be selected based on boot mode settings on the system.

file_permission = 420
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# File permission for swift-less image hosting with the octal permission representation of file access permissions. This setting defaults to ``644``, or as the octal number ``0o644`` in Python. This setting must be set to the octal number representation, meaning starting with ``0o``.

kernel_append_params = nofb vga=normal
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Additional kernel parameters to pass down to the instance kernel. These parameters can be consumed by the kernel or by the applications by reading /proc/cmdline. Mind severe cmdline size limit! Can be overridden by `instance_info/kernel_append_params` property.

oob_erase_devices_job_status_interval = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval (in seconds) between periodic erase-devices status checks to determine whether the asynchronous out-of-band erase-devices was successfully finished or not. On an average, a 300GB HDD with default pattern "overwrite" would take approximately 9 hours and 300GB SSD with default pattern "block" would take approx. 30 seconds to complete sanitize disk erase.

power_wait = 2
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Amount of time in seconds to wait in between power operations

swift_ilo_container = ironic_ilo_container
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The Swift iLO container to store data.

swift_object_expiry_timeout = 900
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Amount of time in seconds for Swift objects to auto-expire.

use_web_server_for_images = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Set this to True to use http web server to host floppy images and generated boot ISO. This requires http_root and http_url to be configured in the [deploy] section of the config file. If this is set to False, then Ironic will use Swift to host the floppy images and generated boot_iso.

verify_ca = True
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# CA certificate to validate iLO. This can be either a Boolean value, a path to a CA_BUNDLE file or directory with certificates of trusted CAs. If set to True the driver will verify the host certificates; if False the driver will ignore verifying the SSL certificate. If it's a path the driver will use the specified certificate or one of the certificates in the directory. Defaults to True.



[inspector]
# inspector options
# None

add_ports = pxe
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Which MAC addresses to add as ports during inspection.

auth-url = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   True
# help:
# Authentication URL

auth_section = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Config Section from which to load plugin specific options

auth_type = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication type to load

cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded Certificate Authority to use when verifying HTTPs connections.

callback_endpoint_override = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# endpoint to use as a callback for posting back introspection data when boot is managed by ironic. Standard keystoneauth options are used by default.

certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate cert file

collect-timing = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Collect per-API call timing information.

connect-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for connection errors.

connect-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for connection errors. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

default-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

default-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

default_hooks = ramdisk-error,validate-interfaces,ports,architecture
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A comma-separated lists of inspection hooks that are run by default. In most cases, the operators will not modify this. The default (somewhat conservative) hooks will raise an exception in case the ramdisk reports an error, validate interfaces in the inventory, and create ports.

domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID to scope to

domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name to scope to

endpoint-override = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Always use this endpoint URL for requests for this client. NOTE: The unversioned endpoint should be specified here; to request a particular API version, use the `version`, `min-version`, and/or `max-version` options.

extra_kernel_params = 
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# extra kernel parameters to pass to the inspection ramdisk when boot is managed by ironic (not ironic-inspector). Pairs key=value separated by spaces.

hooks = $default_hooks
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Comma-separated list of enabled hooks for processing pipeline. The default for this is $default_hooks. Hooks can be added before or after the defaults like this: "prehook,$default_hooks,posthook".

insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verify HTTPS connections.

interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# The default interface for endpoint URL discovery.

keep_ports = all
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Which ports (already present on a node) to keep after inspection.

keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate key file

max-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum major version of a given API, intended to be used as the upper bound of a range with min_version. Mutually exclusive with version.

min-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The minimum major version of a given API, intended to be used as the lower bound of a range with max_version. Mutually exclusive with version. If min_version is given with no max_version it is as if max version is "latest".

password = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's password

power_off = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# whether to power off a node after inspection finishes. Ignored for nodes that have fast track mode enabled.

project-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID containing project

project-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name containing project

project-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project ID to scope to

project-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project name to scope to

region-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default region_name for endpoint URL discovery.

require_managed_boot = None
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# require that the in-band inspection boot is fully managed by the node's boot interface. Set this to True if your installation does not have a separate (i)PXE boot environment for node discovery. Set to False if you need to inspect nodes that are not supported by boot interfaces (e.g. because they don't have ports).

retriable-status-codes = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of retriable HTTP status codes that should be retried. If not set default to  [503]

service-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_name for endpoint URL discovery.

service-type = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_type for endpoint URL discovery.

split-loggers = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Log requests to multiple loggers.

status-code-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for retriable HTTP status codes.

status-code-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for retriable status codes. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

status_check_period = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# period (in seconds) to check status of nodes on inspection

system-scope = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Scope for system operations

tenant-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant ID

tenant-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant Name

timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout value for http requests

trust-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ID of the trust to use as a trustee use

update_pxe_enabled = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to update the ports' pxe_enabled field according to the inspection data.

user-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain id

user-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain name

user-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User id

username = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Username

valid-interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of interfaces, in order of preference, for endpoint URL.

version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum Major API version within a given Major API version for endpoint URL discovery. Mutually exclusive with min_version and max_version



[inventory]
# inventory options
# None

data_backend = database
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The storage backend for storing inspection data.

swift_data_container = introspection_data_container
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The Swift container prefix to store the inspection data (separately inventory and plugin data).



[ipmi]
# ipmi options
# None

additional_retryable_ipmi_errors = []
# class:      <class 'oslo_config.cfg.MultiStrOpt'>
# deprecated: False
# multi:      True
# required:   False
# help:
# Additional errors ipmitool may encounter, specific to the environment it is run in.

cipher_suite_versions = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of possible cipher suites versions that can be supported by the hardware in case the field `cipher_suite` is not set for the node.

command_retry_timeout = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum time in seconds to retry retryable IPMI operations. (An operation is retryable, for example, if the requested operation fails because the BMC is busy.) Setting this too high can cause the sync power state periodic task to hang when there are slow or unresponsive BMCs.

debug = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enables all ipmi commands to be executed with an additional debugging output. This is a separate option as ipmitool can log a substantial amount of misleading text when in this mode.

disable_boot_timeout = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default timeout behavior whether ironic sends a raw IPMI command to disable the 60 second timeout for booting. Setting this option to False will NOT send that command, the default value is True. It may be overridden by per-node 'ipmi_disable_boot_timeout' option in node's 'driver_info' field.

kill_on_timeout = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Kill `ipmitool` process invoked by ironic to read node power state if `ipmitool` process does not exit after `command_retry_timeout` timeout expires. Recommended setting is True

min_command_interval = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum time, in seconds, between IPMI operations sent to a server. There is a risk with some hardware that setting this too low may cause the BMC to crash. Recommended setting is 5 seconds.

use_ipmitool_retries = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# When set to True and the parameters are supported by ipmitool, the number of retries and the retry interval are passed to ipmitool as parameters, and ipmitool will do the retries.  When set to False, ironic will retry the ipmitool commands. Recommended setting is False



[irmc]
# irmc options
# None

auth_method = basic
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication method to be used for iRMC operations

clean_priority_restore_irmc_bios_config = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Priority for restore_irmc_bios_config clean step.

client_timeout = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (in seconds) for iRMC operations

fpga_ids = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of vendor IDs and device IDs for CPU FPGA to inspect. List items are in format vendorID/deviceID and separated by commas. CPU inspection will use this value to find existence of CPU FPGA in a node. If this option is not defined, then leave out CUSTOM_CPU_FPGA in node traits. Sample fpga_ids value: 0x1000/0x0079,0x2100/0x0080

gpu_ids = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of vendor IDs and device IDs for GPU device to inspect. List items are in format vendorID/deviceID and separated by commas. GPU inspection will use this value to count the number of GPU device in a node. If this option is not defined, then leave out pci_gpu_devices in capabilities property. Sample gpu_ids value: 0x1000/0x0079,0x2100/0x0080

kernel_append_params = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Additional kernel parameters to pass down to the instance kernel. These parameters can be consumed by the kernel or by the applications by reading /proc/cmdline. Mind severe cmdline size limit! Can be overridden by `instance_info/kernel_append_params` property.

port = 443
# class:      <class 'oslo_config.cfg.PortOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Port to be used for iRMC operations

query_raid_config_fgi_status_interval = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval (in seconds) between periodic RAID status checks to determine whether the asynchronous RAID configuration was successfully finished or not. Foreground Initialization (FGI) will start 5 minutes after creating virtual drives.

remote_image_server = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# IP of remote image server

remote_image_share_name = share
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# share name of remote_image_server

remote_image_share_root = /remote_image_share_root
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Ironic conductor node's "NFS" or "CIFS" root path

remote_image_share_type = CIFS
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Share type of virtual media

remote_image_user_domain = 
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name of remote_image_user_name

remote_image_user_name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User name of remote_image_server

remote_image_user_password = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Password of remote_image_user_name

sensor_method = ipmitool
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Sensor data retrieval method.

snmp_auth_proto = sha
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# SNMPv3 message authentication protocol ID. Required for version 'v3'. The valid options are 'sha', 'sha256', 'sha384' and 'sha512', while 'sha' is the only supported protocol in iRMC S4 and S5, and from iRMC S6, 'sha256', 'sha384' and 'sha512' are supported, but 'sha' is not supported any more.

snmp_community = public
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# SNMP community. Required for versions "v1" and "v2c"

snmp_polling_interval = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# SNMP polling interval in seconds

snmp_port = 161
# class:      <class 'oslo_config.cfg.PortOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# SNMP port

snmp_priv_proto = aes
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# SNMPv3 message privacy (encryption) protocol ID. Required for version 'v3'. 'aes' is supported.

snmp_security = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# SNMP security name. Required for version 'v3'.

snmp_version = v2c
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# SNMP protocol version



[ironic_lib]
# ironic_lib options
# None

fatal_exception_format_errors = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Used if there is a formatting error when generating an exception message (a programming error). If True, raise an exception; if False, use the unformatted message.



[json_rpc]
# json_rpc options
# None

allowed_roles = ['admin']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of roles allowed to use JSON RPC

auth_section = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Config Section from which to load plugin specific options

auth_strategy = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication strategy used by JSON RPC. Defaults to the global auth_strategy setting.

auth_type = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication type to load

cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded Certificate Authority to use when verifying HTTPs connections.

certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate cert file

collect-timing = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Collect per-API call timing information.

connect-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for connection errors.

connect-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for connection errors. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

endpoint-override = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Always use this endpoint URL for requests for this client. NOTE: The unversioned endpoint should be specified here; to request a particular API version, use the `version`, `min-version`, and/or `max-version` options.

host_ip = ::
# class:      <class 'oslo_config.cfg.HostAddressOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The IP address or hostname on which JSON RPC will listen.

http_basic_auth_user_file = /etc/ironic/htpasswd-json-rpc
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Path to Apache format user authentication file used when auth_strategy=http_basic

http_basic_password = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# Password to use for HTTP Basic authentication client requests.

http_basic_username = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# Name of the user to use for HTTP Basic authentication client requests.

insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verify HTTPS connections.

interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# The default interface for endpoint URL discovery.

keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate key file

max-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum major version of a given API, intended to be used as the upper bound of a range with min_version. Mutually exclusive with version.

min-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The minimum major version of a given API, intended to be used as the lower bound of a range with max_version. Mutually exclusive with version. If min_version is given with no max_version it is as if max version is "latest".

port = 8089
# class:      <class 'oslo_config.cfg.PortOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The port to use for JSON RPC

region-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default region_name for endpoint URL discovery.

retriable-status-codes = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of retriable HTTP status codes that should be retried. If not set default to  [503]

service-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_name for endpoint URL discovery.

service-type = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_type for endpoint URL discovery.

split-loggers = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Log requests to multiple loggers.

status-code-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for retriable HTTP status codes.

status-code-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for retriable status codes. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout value for http requests

unix_socket = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Unix socket to listen on. Disables host_ip and port.

unix_socket_mode = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# File mode (an octal number) of the unix socket to listen on. Ignored if unix_socket is not set.

use_ssl = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Whether to use TLS for JSON RPC

valid-interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of interfaces, in order of preference, for endpoint URL.

version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum Major API version within a given Major API version for endpoint URL discovery. Mutually exclusive with min_version and max_version



[keystone_authtoken]
# keystone_authtoken options
# None

admin_password = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Service user password.

admin_tenant_name = admin
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Service tenant name.

admin_token = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# This option is deprecated and may be removed in a future release. Single shared secret with the Keystone configuration used for bootstrapping a Keystone installation, or otherwise bypassing the normal authentication process. This option should not be used, use `admin_user` and `admin_password` instead.

admin_user = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Service username.

auth_admin_prefix = 
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Prefix to prepend at the beginning of the path. Deprecated, use identity_uri.

auth_host = 127.0.0.1
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Host providing the admin Identity API endpoint. Deprecated, use identity_uri.

auth_port = 35357
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Port of the admin Identity API endpoint. Deprecated, use identity_uri.

auth_protocol = https
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Protocol of the admin Identity API endpoint. Deprecated, use identity_uri.

auth_section = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Config Section from which to load plugin specific options

auth_type = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication type to load

auth_uri = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# Complete "public" Identity API endpoint. This endpoint should not be an "admin" endpoint, as it should be accessible by all end users. Unauthenticated clients are redirected to this endpoint to authenticate. Although this endpoint should ideally be unversioned, client support in the wild varies. If you're using a versioned v2 endpoint here, then this should *not* be the same endpoint the service user utilizes for validating tokens, because normal end users may not be able to reach that endpoint. This option is deprecated in favor of www_authenticate_uri and will be removed in the S release.

auth_version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# API version of the Identity API endpoint.

cache = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Request environment key where the Swift cache object is stored. When auth_token middleware is deployed with a Swift cache, use this option to have the middleware share a caching backend with swift. Otherwise, use the ``memcached_servers`` option instead.

cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A PEM encoded Certificate Authority to use when verifying HTTPs connections. Defaults to system CAs.

certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Required if identity server requires client certificate

delay_auth_decision = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Do not handle authorization requests within the middleware, but delegate the authorization decision to downstream WSGI components.

enforce_token_bind = permissive
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Used to control the use and type of token binding. Can be set to: "disabled" to not check token binding. "permissive" (default) to validate binding information if the bind type is of a form known to the server and ignore it if not. "strict" like "permissive" but if the bind type is unknown the token will be rejected. "required" any form of token binding is needed to be allowed. Finally the name of a binding method that must be present in tokens.

http_connect_timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Request timeout value for communicating with Identity API server.

http_request_max_retries = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# How many times are we trying to reconnect when communicating with Identity API Server.

identity_uri = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Complete admin Identity API endpoint. This should specify the unversioned root endpoint e.g. https://localhost:35357/

include_service_catalog = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# (Optional) Indicate whether to set the X-Service-Catalog header. If False, middleware will not ask for service catalog on token validation and will not set the X-Service-Catalog header.

insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verify HTTPS connections.

interface = internal
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interface to use for the Identity API endpoint. Valid values are "public", "internal" (default) or "admin".

keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Required if identity server requires client certificate

memcache_pool_conn_get_timeout = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# (Optional) Number of seconds that an operation will wait to get a memcached client connection from the pool.

memcache_pool_dead_retry = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# (Optional) Number of seconds memcached server is considered dead before it is tried again.

memcache_pool_maxsize = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# (Optional) Maximum total number of open connections to every memcached server.

memcache_pool_socket_timeout = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# (Optional) Socket timeout in seconds for communicating with a memcached server.

memcache_pool_unused_timeout = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# (Optional) Number of seconds a connection to memcached is held unused in the pool before it is closed.

memcache_secret_key = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# (Optional, mandatory if memcache_security_strategy is defined) This string is used for key derivation.

memcache_security_strategy = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# (Optional) If defined, indicate whether token data should be authenticated or authenticated and encrypted. If MAC, token data is authenticated (with HMAC) in the cache. If ENCRYPT, token data is encrypted and authenticated in the cache. If the value is not one of these options or empty, auth_token will raise an exception on initialization.

memcache_use_advanced_pool = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# (Optional) Use the advanced (eventlet safe) memcached client pool.

memcached_servers = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optionally specify a list of memcached server(s) to use for caching. If left undefined, tokens will instead be cached in-process.

region_name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The region in which the identity server can be found.

service_token_roles = ['service']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# A choice of roles that must be present in a service token. Service tokens are allowed to request that an expired token can be used and so this check should tightly control that only actual services should be sending this token. Roles here are applied as an ANY check so any role in this list must be present. For backwards compatibility reasons this currently only affects the allow_expired check.

service_token_roles_required = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# For backwards compatibility reasons we must let valid service tokens pass that don't pass the service_token_roles check as valid. Setting this true will become the default in a future release and should be enabled if possible.

service_type = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The name or type of the service as it appears in the service catalog. This is used to validate tokens that have restricted access rules.

token_cache_time = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# In order to prevent excessive effort spent validating tokens, the middleware caches previously-seen tokens for a configurable duration (in seconds). Set to -1 to disable caching completely.

www_authenticate_uri = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Complete "public" Identity API endpoint. This endpoint should not be an "admin" endpoint, as it should be accessible by all end users. Unauthenticated clients are redirected to this endpoint to authenticate. Although this endpoint should ideally be unversioned, client support in the wild varies. If you're using a versioned v2 endpoint here, then this should *not* be the same endpoint the service user utilizes for validating tokens, because normal end users may not be able to reach that endpoint.



[mdns]
# Options for multicast DNS
# None

interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of IP addresses of interfaces to use for mDNS. Defaults to all interfaces on the system.

lookup_attempts = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of attempts to lookup a service.

params = {}
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Additional parameters to pass for the registered service.

registration_attempts = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of attempts to register a service. Currently has to be larger than 1 because of race conditions in the zeroconf library.



[metrics]
# metrics options
# None

agent_backend = noop
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Backend for the agent ramdisk to use for metrics. Default possible backends are "noop" and "statsd".

agent_global_prefix = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Prefix all metric names sent by the agent ramdisk with this value. The format of metric names is [global_prefix.][uuid.][host_name.]prefix.metric_name.

agent_prepend_host = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Prepend the hostname to all metric names sent by the agent ramdisk. The format of metric names is [global_prefix.][uuid.][host_name.]prefix.metric_name.

agent_prepend_host_reverse = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Split the prepended host value by "." and reverse it for metrics sent by the agent ramdisk (to better match the reverse hierarchical form of domain names).

agent_prepend_uuid = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Prepend the node's Ironic uuid to all metric names sent by the agent ramdisk. The format of metric names is [global_prefix.][uuid.][host_name.]prefix.metric_name.

backend = noop
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Backend to use for the metrics system.

global_prefix = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Prefix all metric names with this value. By default, there is no global prefix. The format of metric names is [global_prefix.][host_name.]prefix.metric_name.

prepend_host = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Prepend the hostname to all metric names. The format of metric names is [global_prefix.][host_name.]prefix.metric_name.

prepend_host_reverse = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Split the prepended host value by "." and reverse it (to better match the reverse hierarchical form of domain names).



[metrics_statsd]
# metrics_statsd options
# None

agent_statsd_host = localhost
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Host for the agent ramdisk to use with the statsd backend. This must be accessible from networks the agent is booted on.

agent_statsd_port = 8125
# class:      <class 'oslo_config.cfg.PortOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Port for the agent ramdisk to use with the statsd backend.

statsd_host = localhost
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Host for use with the statsd backend.

statsd_port = 8125
# class:      <class 'oslo_config.cfg.PortOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Port to use with the statsd backend.



[molds]
# molds options
# None

password = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Password for "http" Basic auth. By default set empty.

retry_attempts = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Retry attempts for saving or getting configuration molds.

retry_interval = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Retry interval for saving or getting configuration molds.

storage = swift
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Configuration mold storage location. Supports "swift" and "http". By default "swift".

user = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User for "http" Basic auth. By default set empty.



[neutron]
# neutron options
# None

add_all_ports = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Option to enable transmission of all ports to neutron when creating ports for provisioning, cleaning, or rescue. This is done without IP addresses assigned to the port, and may be useful in some bonded network configurations.

auth-url = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   True
# help:
# Authentication URL

auth_section = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Config Section from which to load plugin specific options

auth_type = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication type to load

cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded Certificate Authority to use when verifying HTTPs connections.

certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate cert file

cleaning_network = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Neutron network UUID or name for the ramdisk to be booted into for cleaning nodes. Required for "neutron" network interface. It is also required if cleaning nodes when using "flat" network interface or "neutron" DHCP provider. If a name is provided, it must be unique among all networks or cleaning will fail.

cleaning_network_security_groups = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of Neutron Security Group UUIDs to be applied during cleaning of the nodes. Optional for the "neutron" network interface and not used for the "flat" or "noop" network interfaces. If not specified, default security group is used.

collect-timing = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Collect per-API call timing information.

connect-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for connection errors.

connect-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for connection errors. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

default-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

default-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

dhcpv6_stateful_address_count = 4
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of IPv6 addresses to allocate for ports created for provisioning, cleaning, rescue or inspection on DHCPv6-stateful networks. Different stages of the chain-loading process will request addresses with different CLID/IAID. Due to non-identical identifiers multiple addresses must be reserved for the host to ensure each step of the boot process can successfully lease addresses.

domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID to scope to

domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name to scope to

endpoint-override = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Always use this endpoint URL for requests for this client. NOTE: The unversioned endpoint should be specified here; to request a particular API version, use the `version`, `min-version`, and/or `max-version` options.

insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verify HTTPS connections.

inspection_network = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Neutron network UUID or name for the ramdisk to be booted into for in-band inspection of nodes. If a name is provided, it must be unique among all networks or inspection will fail.

inspection_network_security_groups = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of Neutron Security Group UUIDs to be applied during the node inspection process. Optional for the "neutron" network interface and not used for the "flat" or "noop" network interfaces. If not specified, the default security group is used.

interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# The default interface for endpoint URL discovery.

keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate key file

max-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum major version of a given API, intended to be used as the upper bound of a range with min_version. Mutually exclusive with version.

min-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The minimum major version of a given API, intended to be used as the lower bound of a range with max_version. Mutually exclusive with version. If min_version is given with no max_version it is as if max version is "latest".

password = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's password

port_setup_delay = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay value to wait for Neutron agents to setup sufficient DHCP configuration for port.

project-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID containing project

project-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name containing project

project-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project ID to scope to

project-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project name to scope to

provisioning_network = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Neutron network UUID or name for the ramdisk to be booted into for provisioning nodes. Required for "neutron" network interface. If a name is provided, it must be unique among all networks or deploy will fail.

provisioning_network_security_groups = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of Neutron Security Group UUIDs to be applied during provisioning of the nodes. Optional for the "neutron" network interface and not used for the "flat" or "noop" network interfaces. If not specified, default security group is used.

region-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default region_name for endpoint URL discovery.

request_timeout = 45
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout for request processing when interacting with Neutron. This value should be increased if neutron port action timeouts are observed as neutron performs pre-commit validation prior returning to the API client which can take longer than normal client/server interactions.

rescuing_network = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Neutron network UUID or name for booting the ramdisk for rescue mode. This is not the network that the rescue ramdisk will use post-boot -- the tenant network is used for that. Required for "neutron" network interface, if rescue mode will be used. It is not used for the "flat" or "noop" network interfaces. If a name is provided, it must be unique among all networks or rescue will fail.

rescuing_network_security_groups = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of Neutron Security Group UUIDs to be applied during the node rescue process. Optional for the "neutron" network interface and not used for the "flat" or "noop" network interfaces. If not specified, the default security group is used.

retriable-status-codes = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of retriable HTTP status codes that should be retried. If not set default to  [503]

retries = 3
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# DEPRECATED: Client retries in the case of a failed request.

service-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_name for endpoint URL discovery.

service-type = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_type for endpoint URL discovery.

servicing_network = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Neutron network UUID or name for booting the ramdisk for service mode. Required for "neutron" network interface, if service mode will be used. It is not used for the "flat" or "noop" network interfaces. If a name is provided, it must be unique among all networks or service will fail.

servicing_network_security_groups = []
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of Neutron Security Group UUIDs to be applied during the node service process. Optional for the "neutron" network interface and not used for the "flat" or "noop" network interfaces. If not specified, the default security group is used.

split-loggers = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Log requests to multiple loggers.

status-code-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for retriable HTTP status codes.

status-code-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for retriable status codes. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

system-scope = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Scope for system operations

tenant-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant ID

tenant-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant Name

timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout value for http requests

trust-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ID of the trust to use as a trustee use

user-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain id

user-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain name

user-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User id

username = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Username

valid-interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of interfaces, in order of preference, for endpoint URL.

version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum Major API version within a given Major API version for endpoint URL discovery. Mutually exclusive with min_version and max_version



[nova]
# nova options
# None

auth-url = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   True
# help:
# Authentication URL

auth_section = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Config Section from which to load plugin specific options

auth_type = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication type to load

cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded Certificate Authority to use when verifying HTTPs connections.

certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate cert file

collect-timing = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Collect per-API call timing information.

connect-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for connection errors.

connect-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for connection errors. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

default-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

default-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID to scope to

domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name to scope to

endpoint-override = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Always use this endpoint URL for requests for this client. NOTE: The unversioned endpoint should be specified here; to request a particular API version, use the `version`, `min-version`, and/or `max-version` options.

insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verify HTTPS connections.

interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# The default interface for endpoint URL discovery.

keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate key file

max-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum major version of a given API, intended to be used as the upper bound of a range with min_version. Mutually exclusive with version.

min-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The minimum major version of a given API, intended to be used as the lower bound of a range with max_version. Mutually exclusive with version. If min_version is given with no max_version it is as if max version is "latest".

password = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's password

project-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID containing project

project-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name containing project

project-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project ID to scope to

project-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project name to scope to

region-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default region_name for endpoint URL discovery.

retriable-status-codes = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of retriable HTTP status codes that should be retried. If not set default to  [503]

send_power_notifications = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# When set to True, it will enable the support for power state change callbacks to nova. This option should be set to False in deployments that do not have the openstack compute service.

service-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_name for endpoint URL discovery.

service-type = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_type for endpoint URL discovery.

split-loggers = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Log requests to multiple loggers.

status-code-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for retriable HTTP status codes.

status-code-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for retriable status codes. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

system-scope = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Scope for system operations

tenant-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant ID

tenant-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant Name

timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout value for http requests

trust-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ID of the trust to use as a trustee use

user-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain id

user-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain name

user-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User id

username = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Username

valid-interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of interfaces, in order of preference, for endpoint URL.

version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum Major API version within a given Major API version for endpoint URL discovery. Mutually exclusive with min_version and max_version



[oslo_concurrency]
# oslo_concurrency options
# None

disable_process_locking = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enables or disables inter-process locks.

lock_path = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Directory to use for lock files.  For security, the specified directory should only be writable by the user running the processes that need locking. Defaults to environment variable OSLO_LOCK_PATH. If external locks are used, a lock path must be set.



[oslo_messaging_metrics]
# oslo_messaging_metrics options
# None

metrics_buffer_size = 1000
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Buffer size to store in oslo.messaging.

metrics_enabled = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Boolean to send rpc metrics to oslo.metrics.

metrics_process_name = 
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Process name which is used to identify which process produce metrics

metrics_socket_file = /var/tmp/metrics_collector.sock
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Unix domain socket file to be used to send rpc related metrics

metrics_thread_stop_timeout = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Sending thread stop once metrics_thread_stop_timeout seconds after the last successful metrics send. So that this thread will not be the blocker when process is shutting down. If the process is still running, sending thread will be restarted at the next metrics queueing time



[oslo_middleware]
# oslo_middleware options
# None

http_basic_auth_user_file = /etc/htpasswd
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# HTTP basic auth password file.



[oslo_policy]
# oslo_policy options
# None

enforce_new_defaults = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# This option controls whether or not to use old deprecated defaults when evaluating policies. If ``True``, the old deprecated defaults are not going to be evaluated. This means if any existing token is allowed for old defaults but is disallowed for new defaults, it will be disallowed. It is encouraged to enable this flag along with the ``enforce_scope`` flag so that you can get the benefits of new defaults and ``scope_type`` together. If ``False``, the deprecated policy check string is logically OR'd with the new policy check string, allowing for a graceful upgrade experience between releases with new policies, which is the default behavior.

enforce_scope = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# This option controls whether or not to enforce scope when evaluating policies. If ``True``, the scope of the token used in the request is compared to the ``scope_types`` of the policy being enforced. If the scopes do not match, an ``InvalidScope`` exception will be raised. If ``False``, a message will be logged informing operators that policies are being invoked with mismatching scope.

policy_default_rule = default
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default rule. Enforced when a requested rule is not found.

policy_dirs = ['policy.d']
# class:      <class 'oslo_config.cfg.MultiStrOpt'>
# deprecated: False
# multi:      True
# required:   False
# help:
# Directories where policy configuration files are stored. They can be relative to any directory in the search path defined by the config_dir option, or absolute paths. The file defined by policy_file must exist for these directories to be searched.  Missing or empty directories are ignored.

policy_file = policy.yaml
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The relative or absolute path of a file that maps roles to permissions for a given service. Relative paths must be specified in relation to the configuration file setting this option.

remote_content_type = application/x-www-form-urlencoded
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Content Type to send and receive data for REST based policy check

remote_ssl_ca_crt_file = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Absolute path to ca cert file for REST based policy check

remote_ssl_client_crt_file = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Absolute path to client cert for REST based policy check

remote_ssl_client_key_file = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Absolute path client key file REST based policy check

remote_ssl_verify_server_crt = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# server identity verification for REST based policy check

remote_timeout = 60
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout in seconds for REST based policy check



[oslo_versionedobjects]
# oslo_versionedobjects options
# None

fatal_exception_format_errors = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Make exception message format errors fatal



[profiler]
# OpenStack cross-service profiling
# OSprofiler library allows to trace requests going through various OpenStack
# services and create the accumulated report of what time was spent on each
# request processing step.

connection_string = messaging://
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Connection string for a notifier backend.
# 
# Default value is ``messaging://`` which sets the notifier to oslo_messaging.
# 
# Examples of possible values:
# 
# * ``messaging://`` - use oslo_messaging driver for sending spans.
# * ``redis://127.0.0.1:6379`` - use redis driver for sending spans.
# * ``mongodb://127.0.0.1:27017`` - use mongodb driver for sending spans.
# * ``elasticsearch://127.0.0.1:9200`` - use elasticsearch driver for sending
#   spans.
# * ``jaeger://127.0.0.1:6831`` - use jaeger tracing as driver for sending spans.

enabled = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable the profiling for all services on this node.
# 
# Default value is False (fully disable the profiling feature).
# 
# Possible values:
# 
# * True: Enables the feature
# * False: Disables the feature. The profiling cannot be started via this project
#   operations. If the profiling is triggered by another project, this project
#   part will be empty.

es_doc_type = notification
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Document type for notification indexing in elasticsearch.

es_scroll_size = 10000
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Elasticsearch splits large requests in batches. This parameter defines
# maximum size of each batch (for example: es_scroll_size=10000).

es_scroll_time = 2m
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# This parameter is a time value parameter (for example: es_scroll_time=2m),
# indicating for how long the nodes that participate in the search will maintain
# relevant resources in order to continue and support it.

filter_error_trace = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable filter traces that contain error/exception to a separated place.
# 
# Default value is set to False.
# 
# Possible values:
# 
# * True: Enable filter traces that contain error/exception.
# * False: Disable the filter.

hmac_keys = SECRET_KEY
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Secret key(s) to use for encrypting context data for performance profiling.
# 
# This string value should have the following format: <key1>[,<key2>,...<keyn>],
# where each key is some random string. A user who triggers the profiling via
# the REST API has to set one of these keys in the headers of the REST API call
# to include profiling results of this node for this particular project.
# 
# Both "enabled" flag and "hmac_keys" config options should be set to enable
# profiling. Also, to generate correct profiling information across all services
# at least one key needs to be consistent between OpenStack projects. This
# ensures it can be used from client side to generate the trace, containing
# information from all possible resources.

sentinel_service_name = mymaster
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Redissentinel uses a service name to identify a master redis service.
# This parameter defines the name (for example:
# ``sentinal_service_name=mymaster``).

socket_timeout = 0.1
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Redissentinel provides a timeout option on the connections.
# This parameter defines that timeout (for example: socket_timeout=0.1).

trace_requests = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable python requests package profiling.
# 
# Supported drivers: jaeger+otlp
# 
# Default value is False.
# 
# Possible values:
# 
# * True: Enables requests profiling.
# * False: Disables requests profiling.

trace_sqlalchemy = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable SQL requests profiling in services.
# 
# Default value is False (SQL requests won't be traced).
# 
# Possible values:
# 
# * True: Enables SQL requests profiling. Each SQL query will be part of the
#   trace and can the be analyzed by how much time was spent for that.
# * False: Disables SQL requests profiling. The spent time is only shown on a
#   higher level of operations. Single SQL queries cannot be analyzed this way.



[profiler_jaeger]
# Jaeger's profiler driver related options
# None

process_tags = {}
# class:      <class 'oslo_config.cfg.DictOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Set process tracer tags.

service_name_prefix = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Set service name prefix to Jaeger service name.



[profiler_otlp]
# OTLP's profiler driver related options
# None

service_name_prefix = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Set service name prefix to OTLP exporters.



[pxe]
# pxe options
# None

boot_retry_check_interval = 90
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Interval (in seconds) between periodic checks on PXE boot retry. Has no effect if boot_retry_timeout is not set.

boot_retry_timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout (in seconds) after which PXE boot should be retried. Must be less than [conductor]deploy_callback_timeout. Disabled by default.

default_ephemeral_format = ext4
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Default file system format for ephemeral partition, if one is created.

dir_permission = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The permission that will be applied to the TFTP folders upon creation. This should be set to the permission such that the tftpserver has access to read the contents of the configured TFTP folder. This setting is only required when the operating system's umask is restrictive such that ironic-conductor is creating files that cannot be read by the TFTP server. Setting to <None> will result in the operating system's umask to be utilized for the creation of new tftp folders. The system default umask is masked out on the specified value. It is required that an octal representation is specified. For example: 0o755

enable_netboot_fallback = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If True, generate a PXE environment even for nodes that use local boot. This is useful when the driver cannot switch nodes to local boot, e.g. with SNMP or with Redfish on machines that cannot do persistent boot. Mostly useful for standalone ironic since Neutron will prevent incorrect PXE boot.

file_permission = 420
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The permission which is used on files created as part of configuration and setup of file assets for PXE based operations. Defaults to a value of 0o644. This value must be specified as an octal representation. For example: 0o644

image_cache_size = 20480
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum size (in MiB) of cache for master images, including those in use.

image_cache_ttl = 10080
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum TTL (in minutes) for old master images in cache.

images_path = /var/lib/ironic/images/
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On the ironic-conductor node, directory where images are stored on disk.

initial_grub_template = $pybasedir/drivers/modules/initial_grub_cfg.template
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On ironic-conductor node, the path to the initial grubconfiguration template for grub network boot.

instance_master_path = /var/lib/ironic/master_images
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On the ironic-conductor node, directory where master instance images are stored on disk. Setting to the empty string disables image caching.

ip_version = 4
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# The IP version that will be used for PXE booting. Defaults to 4. This option has been a no-op for in-treedrivers since the Ussuri development cycle.

ipxe_boot_script = $pybasedir/drivers/modules/boot.ipxe
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On ironic-conductor node, the path to the main iPXE script file.

ipxe_bootfile_name = undionly.kpxe
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Bootfile DHCP parameter.

ipxe_bootfile_name_by_arch = {}
# class:      <class 'oslo_config.cfg.DictOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Bootfile DHCP parameter per node architecture. For example: aarch64:ipxe_aa64.efi

ipxe_config_template = $pybasedir/drivers/modules/ipxe_config.template
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On ironic-conductor node, template file for iPXE operations.

ipxe_fallback_script = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# File name (e.g. inspector.ipxe) of an iPXE script to fall back to when booting to a MAC-specific script fails. When not set, booting will fail in this case.

ipxe_timeout = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout value (in seconds) for downloading an image via iPXE. Defaults to 0 (no timeout)

ipxe_use_swift = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Download deploy and rescue images directly from swift using temporary URLs. If set to false (default), images are downloaded to the ironic-conductor node and served over its local HTTP server. Applicable only when 'ipxe' compatible boot interface is used.

kernel_append_params = nofb vga=normal
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Additional append parameters for baremetal PXE boot.

loader_file_paths = {}
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Dictionary describing the bootloaders to load into conductor PXE/iPXE boot folders values from the host operating system. Formatted as key of destination file name, and value of a full path to a file to be copied. File assets will have [pxe]file_permission applied, if set. If used, the file names should match established bootloader configuration settings for bootloaders. Use example: ipxe.efi:/usr/share/ipxe/ipxe-snponly-x86_64.efi,undionly.kpxe:/usr/share/ipxe/undionly.kpxe

pxe_bootfile_name = pxelinux.0
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Bootfile DHCP parameter.

pxe_bootfile_name_by_arch = {}
# class:      <class 'oslo_config.cfg.DictOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Bootfile DHCP parameter per node architecture. For example: aarch64:grubaa64.efi

pxe_config_subdir = pxelinux.cfg
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Directory in which to create symbolic links which represent the MAC or IP address of the ports on a node and allow boot loaders to load the PXE file for the node. This directory name is relative to the PXE or iPXE folders.

pxe_config_template = $pybasedir/drivers/modules/pxe_config.template
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On ironic-conductor node, template file for PXE loader configuration.

pxe_config_template_by_arch = {}
# class:      <class 'oslo_config.cfg.DictOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On ironic-conductor node, template file for PXE configuration per node architecture. For example: aarch64:/opt/share/grubaa64_pxe_config.template

tftp_master_path = /tftpboot/master_images
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On ironic-conductor node, directory where master TFTP images are stored on disk. Setting to the empty string disables image caching.

tftp_root = /tftpboot
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ironic-conductor node's TFTP root path. The ironic-conductor must have read/write access to this path.

tftp_server = $my_ip
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# IP address of ironic-conductor node's TFTP server.

uefi_ipxe_bootfile_name = snponly.efi
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Bootfile DHCP parameter for UEFI boot mode. If you experience problems with booting using it, try ipxe.efi.

uefi_pxe_bootfile_name = bootx64.efi
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Bootfile DHCP parameter for UEFI boot mode.

uefi_pxe_config_template = $pybasedir/drivers/modules/pxe_grub_config.template
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# On ironic-conductor node, template file for PXE configuration for UEFI boot loader. Generally this is used for GRUB specific templates.



[redfish]
# redfish options
# None

auth_type = auto
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Redfish HTTP client authentication method.

boot_mode_config_timeout = 900
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait for boot mode or secure boot status change to take effect after a reboot. Set to 0 to disable waiting.

connection_attempts = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of attempts to try to connect to Redfish

connection_cache_size = 1000
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum Redfish client connection cache size. Redfish driver would strive to reuse authenticated BMC connections (obtained through Redfish Session Service). This option caps the maximum number of connections to maintain. The value of `0` disables client connection caching completely.

connection_retry_interval = 4
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait between attempts to connect to Redfish

file_permission = 420
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# File permission for swift-less image hosting with the octal permission representation of file access permissions. This setting defaults to ``644``, or as the octal number ``0o644`` in Python. This setting must be set to the octal number representation, meaning starting with ``0o``.

firmware_source = http
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Specifies how firmware image should be served. Whether from its original location using the firmware source URL directly, or should serve it from ironic's Swift or HTTP server.

firmware_update_fail_interval = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait between checking for failed firmware update tasks

firmware_update_status_interval = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait between checking for completed firmware update tasks

kernel_append_params = nofb vga=normal
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Additional kernel parameters to pass down to the instance kernel. These parameters can be consumed by the kernel or by the applications by reading /proc/cmdline. Mind severe cmdline size limit! Can be overridden by `instance_info/kernel_append_params` property.

raid_config_fail_interval = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait between checking for failed raid config tasks

raid_config_status_interval = 60
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Number of seconds to wait between checking for completed raid config tasks

swift_container = ironic_redfish_container
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The Swift container to store Redfish driver data. Applies only when `use_swift` is enabled.

swift_object_expiry_timeout = 900
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Amount of time in seconds for Swift objects to auto-expire. Applies only when `use_swift` is enabled.

use_swift = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Upload generated ISO images for virtual media boot to Swift, then pass temporary URL to BMC for booting the node. If set to false, images are placed on the ironic-conductor node and served over its local HTTP server.



[sensor_data]
# sensor_data options
# None

data_types = ['ALL']
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of comma separated meter types which need to be sent to Ceilometer. The default value, "ALL", is a special value meaning send all the sensor data. This setting only applies to baremetal sensor data being processed through the conductor.

enable_for_conductor = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If to include sensor metric data for the Conductor process itself in the message payload for sensor data which allows operators to gather instance counts of actions and states to better manage the deployment.

enable_for_nodes = True
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# If to transmit any sensor data for any nodes under this conductor's management. This option superceeds the ``send_sensor_data_for_undeployed_nodes`` setting.

enable_for_undeployed_nodes = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default for sensor data collection is to only collect data for machines that are deployed, however operators may desire to know if there are failures in hardware that is not presently in use. When set to true, the conductor will collect sensor information from all nodes when sensor data collection is enabled via the send_sensor_data setting.

interval = 600
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Seconds between conductor sending sensor data message via the notification bus. This was originally for consumption via ceilometer, but the data may also be consumed via a plugin like ironic-prometheus-exporter or any other message bus data collector.

send_sensor_data = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Enable sending sensor data message via the notification bus.

wait_timeout = 300
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The time in seconds to wait for send sensors data periodic task to be finished before allowing periodic call to happen again. Should be less than send_sensor_data_interval value.

workers = 4
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of workers that can be started simultaneously for send data from sensors periodic task.



[service_catalog]
# service_catalog options
# None

auth-url = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   True
# help:
# Authentication URL

auth_section = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Config Section from which to load plugin specific options

auth_type = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication type to load

cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded Certificate Authority to use when verifying HTTPs connections.

certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate cert file

collect-timing = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Collect per-API call timing information.

connect-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for connection errors.

connect-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for connection errors. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

default-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

default-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID to scope to

domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name to scope to

endpoint-override = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Always use this endpoint URL for requests for this client. NOTE: The unversioned endpoint should be specified here; to request a particular API version, use the `version`, `min-version`, and/or `max-version` options.

insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verify HTTPS connections.

interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# The default interface for endpoint URL discovery.

keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate key file

max-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum major version of a given API, intended to be used as the upper bound of a range with min_version. Mutually exclusive with version.

min-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The minimum major version of a given API, intended to be used as the lower bound of a range with max_version. Mutually exclusive with version. If min_version is given with no max_version it is as if max version is "latest".

password = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's password

project-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID containing project

project-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name containing project

project-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project ID to scope to

project-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project name to scope to

region-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default region_name for endpoint URL discovery.

retriable-status-codes = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of retriable HTTP status codes that should be retried. If not set default to  [503]

service-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_name for endpoint URL discovery.

service-type = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_type for endpoint URL discovery.

split-loggers = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Log requests to multiple loggers.

status-code-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for retriable HTTP status codes.

status-code-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for retriable status codes. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

system-scope = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Scope for system operations

tenant-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant ID

tenant-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant Name

timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout value for http requests

trust-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ID of the trust to use as a trustee use

user-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain id

user-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain name

user-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User id

username = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Username

valid-interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of interfaces, in order of preference, for endpoint URL.

version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum Major API version within a given Major API version for endpoint URL discovery. Mutually exclusive with min_version and max_version



[snmp]
# snmp options
# None

power_action_delay = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Time (in seconds) to sleep before power on and after powering off. Which may be needed with some PDUs as they may not honor toggling a specific power port in rapid succession without a delay. This option may be useful if the attached physical machine has a substantial power supply to hold it over in the event of a brownout.

power_timeout = 10
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Seconds to wait for power action to be completed

reboot_delay = 0
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Time (in seconds) to sleep between when rebooting (powering off and on again)

udp_transport_retries = 5
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of UDP request retries, 0 means no retries.

udp_transport_timeout = 1.0
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Response timeout in seconds used for UDP transport. Timeout should be a multiple of 0.5 seconds and is applicable to each retry.



[swift]
# swift options
# None

auth-url = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   True
# help:
# Authentication URL

auth_section = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Config Section from which to load plugin specific options

auth_type = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Authentication type to load

cafile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded Certificate Authority to use when verifying HTTPs connections.

certfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate cert file

collect-timing = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Collect per-API call timing information.

connect-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for connection errors.

connect-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for connection errors. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

default-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

default-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2 authentication.

domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID to scope to

domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name to scope to

endpoint-override = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Always use this endpoint URL for requests for this client. NOTE: The unversioned endpoint should be specified here; to request a particular API version, use the `version`, `min-version`, and/or `max-version` options.

insecure = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Verify HTTPS connections.

interface = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: True
# multi:      False
# required:   False
# help:
# The default interface for endpoint URL discovery.

keyfile = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# PEM encoded client certificate key file

max-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum major version of a given API, intended to be used as the upper bound of a range with min_version. Mutually exclusive with version.

min-version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The minimum major version of a given API, intended to be used as the lower bound of a range with max_version. Mutually exclusive with version. If min_version is given with no max_version it is as if max version is "latest".

password = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's password

project-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain ID containing project

project-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Domain name containing project

project-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project ID to scope to

project-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Project name to scope to

region-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default region_name for endpoint URL discovery.

retriable-status-codes = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of retriable HTTP status codes that should be retried. If not set default to  [503]

service-name = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_name for endpoint URL discovery.

service-type = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The default service_type for endpoint URL discovery.

split-loggers = False
# class:      <class 'oslo_config.cfg.BoolOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Log requests to multiple loggers.

status-code-retries = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# The maximum number of retries that should be attempted for retriable HTTP status codes.

status-code-retry-delay = None
# class:      <class 'oslo_config.cfg.FloatOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Delay (in seconds) between two retries for retriable status codes. If not set, exponential retry starting with 0.5 seconds up to a maximum of 60 seconds is used.

swift_max_retries = 2
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Maximum number of times to retry a Swift request, before failing.

system-scope = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Scope for system operations

tenant-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant ID

tenant-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Tenant Name

timeout = None
# class:      <class 'oslo_config.cfg.IntOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Timeout value for http requests

trust-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# ID of the trust to use as a trustee use

user-domain-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain id

user-domain-name = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User's domain name

user-id = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# User id

username = None
# class:      <class 'oslo_config.cfg.Opt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Username

valid-interfaces = None
# class:      <class 'oslo_config.cfg.ListOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# List of interfaces, in order of preference, for endpoint URL.

version = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Minimum Major API version within a given Major API version for endpoint URL discovery. Mutually exclusive with min_version and max_version



[xclarity]
# xclarity options
# None

manager_ip = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# IP address of the XClarity Controller. Configuration here is deprecated and will be removed in the Stein release. Please update the driver_info field to use "xclarity_manager_ip" instead

password = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Password for XClarity Controller username. Configuration here is deprecated and will be removed in the Stein release. Please update the driver_info field to use "xclarity_password" instead

port = 443
# class:      <class 'oslo_config.cfg.PortOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Port to be used for XClarity Controller connection.

username = None
# class:      <class 'oslo_config.cfg.StrOpt'>
# deprecated: False
# multi:      False
# required:   False
# help:
# Username for the XClarity Controller. Configuration here is deprecated and will be removed in the Stein release. Please update the driver_info field to use "xclarity_username" instead



