{
  "In": "nova/nova/conf/servicegroup.py",
  "Out": {
    "groups": {
      "DEFAULT": "DEFAULT"
    },
    "options": {
      "DEFAULT": {
        "servicegroup_driver": {
          "__class__": "<class 'oslo_config.cfg.StrOpt'>",
          "advanced": false,
          "default": "db",
          "deprecated_for_removal": false,
          "deprecated_opts": [],
          "deprecated_reason": null,
          "deprecated_since": null,
          "dest": "servicegroup_driver",
          "help": "\nThis option specifies the driver to be used for the servicegroup service.\n\nServiceGroup API in nova enables checking status of a compute node. When a\ncompute worker running the nova-compute daemon starts, it calls the join API\nto join the compute group. Services like nova scheduler can query the\nServiceGroup API to check if a node is alive. Internally, the ServiceGroup\nclient driver automatically updates the compute worker status. There are\nmultiple backend implementations for this service: Database ServiceGroup driver\nand Memcache ServiceGroup driver.\n\nPossible Values:\n\n    * db : Database ServiceGroup driver\n    * mc : Memcache ServiceGroup driver\n\nRelated Options:\n\n    * service_down_time (maximum time since last check-in for up service)\n",
          "metavar": null,
          "multi": false,
          "mutable": false,
          "name": "servicegroup_driver",
          "positional": false,
          "required": false,
          "sample_default": null,
          "secret": false,
          "short": null,
          "type": {
            "NONE_DEFAULT": "<None>",
            "__class__": "<class 'oslo_config.types.String'>",
            "choices": [
              "db",
              "mc"
            ],
            "format_defaults": {
              "__class__": "<class 'method'>"
            },
            "ignore_case": null,
            "lower_case_choices": null,
            "max_length": 0,
            "quote_trailing_and_leading_space": {
              "__class__": "<class 'method'>"
            },
            "quotes": null,
            "regex": null,
            "type_name": "string value"
          }
        }
      }
    }
  }
}